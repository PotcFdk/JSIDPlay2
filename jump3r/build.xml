<?xml version="1.0" encoding="UTF-8"?>
<!-- ====================================================================== 
     03.07.2011 09:41:21                                                        

     project    	jump3r
     description	Java MP3 encoder/decoder framework (based on lame 3.98.4)
                   
     Ken HÃ¤ndel
     ====================================================================== -->
<project name="project" default="default">
	<description>
            Create executable jar of jump3r
    </description>

	<!-- build result directory -->
	<property name="result_dir" location="${basedir}/result" />
	<!-- main jar name of the player -->
	<property name="mainJar" value="jump3r.jar" />
	<!-- source folder to compile -->
	<property name="src" location="${basedir}/src" />
	<!-- encoding of java source files -->
	<property name="src_encoding" value="ISO-8859-1" />
	<!-- binary folder of class files and resources -->
	<property name="bin" location="${basedir}/bin" />
	<!-- resources folder -->
	<property name="res" location="${basedir}/res" />
	<!-- Main class of manifest file -->
	<property name="mf_main_class" value="mp3.Main" />

	<!-- Class path -->
	<fileset id="jars" dir="${basedir}">
		<include name="*.jar" />
	</fileset>
	<path id="class.path">
		<fileset refid="jars" />
	</path>

	<!-- ProGuard task definition -->
	<taskdef resource="proguard/ant/task.properties" classpath="${basedir}/antlib/proguard.jar" />

	<!-- ================================= 
          target: default              
         ================================= -->
	<target name="default" depends="init,jump3r" description="Create executable jar of jump3r" />

	<!-- ================================= 
          target: init
          Description:
          Clean up old binaries and build results and
          re-create the directories.
         ================================= -->
	<target name="init">
		<echo>Please, make sure java.home points to a JDK (java.home=${java.home})</echo>
		<delete dir="${result_dir}" />
		<mkdir dir="${result_dir}" />
	</target>

	<!-- ================================= 
          target: jump3r
          Description:
          Create a deployable form of jump3r.
          At the moment applets, Java WebStart and
          command-line is supported.
         ================================= -->
	<target name="jump3r" depends="jump3r_jar,jump3r_shrink" />

	<!-- ================================= 
          target: jump3r_jar
          Description:
          Create the main jar of jump3r
          all binaries and all sources are included
          as well as a manifest file to create an executable jar.
          In fact a GUI version and a console version is created (<mainJar>_console.jar).
         ================================= -->
	<target name="jump3r_jar" depends="compile">
		<!-- GUI Player -->
		<delete file="${result_dir}/${mainJar}" />
		<jar destfile="${result_dir}/${mainJar}">
			<fileset dir="${src}">
				<include name="**/*" />
				<exclude name="**/*.java" />
			</fileset>
			<fileset dir="${bin}">
				<include name="**/*.class" />
			</fileset>
			<manifest>
				<attribute name="Main-Class" value="${mf_main_class}" />
			</manifest>
		</jar>
	</target>

	<!-- ================================= 
          target: compile
          Description:
          Compile the sources to the bin folder.
          All resources are copied into the target directory,
          as eclipse does it accordingly.
         ================================= -->
	<target name="compile">
		<delete dir="${bin}" />
		<mkdir dir="${bin}" />
		<javac debug="true" debuglevel="lines,vars,source" srcdir="${src}" destdir="${bin}" encoding="${src_encoding}">
			<classpath refid="class.path" />
		</javac>
		<copy todir="${bin}">
			<fileset dir="${src}">
				<include name="**/*" />
				<exclude name="**/*.java" />
			</fileset>
		</copy>
	</target>

	<!-- ================================= 
          target: jump3r_shrink
          Description:
          Optimize the main jar of jump3r.
          The JAR is really small (shrinked and optimized)
          using proguard.
         ================================= -->
	<target name="jump3r_shrink" depends="jump3r_jar">
		<proguard overloadaggressively="true" allowaccessmodification="true">
			<injar file="${result_dir}/${mainJar}" />
			<outjar file="${result_dir}/jump3r_shrinked.jar" />
			<libraryjar file="${java.home}/lib/rt.jar" />
			<libraryjar file="${basedir}/swixml.jar" />
			<!-- Preserve the main method -->
			<keep access="public" name="mp3.Main">
				<method access="public static" type="void" name="main" parameters="java.lang.String[]" />
			</keep>
			<keep access="public" name="ui.LameUI">
				<method access="public static" type="void" name="main" parameters="java.lang.String[]" />
			</keep>
			<!-- Preserve the methods that are required in all enumeration classes. -->
			<keepclassmembers extends="java.lang.Enum">
				<method access="public static" type="**[]" name="values" parameters="" />
				<method access="public static" type="**" name="valueOf" parameters="java.lang.String" />
			</keepclassmembers>
			<adaptresourcefilenames filter="**.png" />
			<keep access="public" name="lowlevel.LameEncoder">
				<method access="public" name="**" />
			</keep>
			<keep access="public" name="lowlevel.LameDecoder">
				<method access="public" name="**" />
			</keep>
			<keep access="public" name="lowlevel.ID3V2Decoder">
				<method access="public" name="**" />
			</keep>
			<keep access="public" name="mp3.MPEGMode">
				<method access="public" name="**" />
			</keep>
		</proguard>
		<move file="${result_dir}/jump3r_shrinked.jar" tofile="${result_dir}/${mainJar}" />
	</target>

</project>
