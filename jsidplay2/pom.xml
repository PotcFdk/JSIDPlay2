<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>jsidplay2</groupId>
	<artifactId>jsidplay2</artifactId>
	<version>3.0</version>
	<packaging>jar</packaging>

	<name>jsidplay2</name>
	<url>kenchis.t15.org/jsidplay2</url>

	<properties>
		<project.build.sourceEncoding>ISO-8859-1</project.build.sourceEncoding>
	</properties>

	<repositories>
		<repository>
			<id>lib</id>
			<url>file://${basedir}/lib</url>
		</repository>
	</repositories>
	<dependencies>
		<dependency>
			<groupId>com.oracle</groupId>
			<artifactId>javafx</artifactId>
			<version>2.0</version>
			<scope>system</scope>
			<systemPath>${java.home}/lib/jfxrt.jar</systemPath>
		</dependency>

		<dependency>
			<groupId>jsidplay2</groupId>
			<artifactId>photos</artifactId>
			<version>1.0</version>
		</dependency>
		<dependency>
			<groupId>jsidplay2</groupId>
			<artifactId>jump3r</artifactId>
			<version>1.0</version>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>4.2.2.Final</version>
		</dependency>
		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<version>2.2.9</version>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>
		<dependency>
			<groupId>net.java.jinput</groupId>
			<artifactId>jinput</artifactId>
			<version>2.0.5</version>
		</dependency>
		<dependency>
			<groupId>net.java.jinput</groupId>
			<artifactId>jinput-platform</artifactId>
			<version>2.0.5</version>
			<classifier>natives-windows</classifier>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.googlecode.mavennatives</groupId>
				<artifactId>maven-nativedependencies-plugin</artifactId>
				<version>0.0.7</version>
				<executions>
					<execution>
						<id>unpacknatives</id>
						<phase>package</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<nativesTargetDir>${project.build.directory}/install</nativesTargetDir>
							<separateDirs>false</separateDirs>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dependencies-install</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/install</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<excludeScope>system</excludeScope>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version>
				<executions>
					<execution>
						<id>jar-install</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/install</outputDirectory>
							<archive>
								<manifest>
									<addClasspath>true</addClasspath>
									<mainClass>ui.JSIDPlay2Main</mainClass>
								</manifest>
								<manifestEntries>
									<Class-Path>jfxrt.jar</Class-Path>
									<mode>development</mode>
									<url>${project.url}</url>
								</manifestEntries>
							</archive>
						</configuration>
					</execution>
					<execution>
						<id>jar</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/deploy</outputDirectory>
							<archive>
								<manifest>
									<addClasspath>true</addClasspath>
									<mainClass>ui.JSIDPlay2Main</mainClass>
								</manifest>
								<manifestEntries>
									<mode>development</mode>
									<url>${project.url}</url>
								</manifestEntries>
							</archive>
						</configuration>
					</execution>
					<execution>
						<id>netsiddev</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration>
							<includes>
								<include>netsiddev/*</include>
								<include>netsiddev/ini/*</include>
								<include>resid_builder/**/*.class</include>
								<include>libsidplay/common/*.class</include>
								<include>sidplay/audio/Audio*.class</include>
								<include>sidplay/audio/JavaSound*.class</include>
								<include>sidplay/ini/intf/IAudioSection.class</include>
								<include>sidplay/ini/intf/IFilterSection.class</include>
								<include>sidplay/ini/IniSection.class</include>
								<include>sidplay/ini/IniReader.class</include>
								<include>sidplay/ini/IniAudioSection.class</include>
								<include>sidplay/ini/IniFilterSection.class</include>
							</includes>
							<outputDirectory>${project.build.directory}/netsiddev</outputDirectory>
							<finalName>jsiddevice_tmp</finalName>
							<archive>
								<manifest>
									<mainClass>netsiddev.NetworkSIDDevice</mainClass>
								</manifest>
								<manifestEntries>
									<mode>development</mode>
									<url>${project.url}</url>
								</manifestEntries>
							</archive>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.github.wvengen</groupId>
				<artifactId>proguard-maven-plugin</artifactId>
				<version>2.0.5</version>
				<executions>
					<execution>
						<id>shrink netsiddev</id>
						<phase>package</phase>
						<goals>
							<goal>proguard</goal>
						</goals>
						<configuration>
							<proguardVersion>4.9</proguardVersion>
							<injar>netsiddev/jsiddevice_tmp.jar</injar>
							<outjar>netsiddev/jsiddevice.jar</outjar>
							<libs>
								<lib>${java.home}/lib/rt.jar</lib>
							</libs>
							<options>
								<option>-overloadaggressively</option>
								<option>-allowaccessmodification</option>
								<option>
									-keep public class netsiddev.NetworkSIDDevice {
									public static void main(java.lang.String[]);
									}
								</option>
								<option>
									-keepclassmembers enum * {
									public static **[] values();
									public static ** valueOf(java.lang.String);
									}
								</option>
								<option>
									-adaptresourcefilenames **.png
								</option>
							</options>
						</configuration>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>net.sf.proguard</groupId>
						<artifactId>proguard-base</artifactId>
						<version>4.9</version>
						<scope>runtime</scope>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>keytool-maven-plugin</artifactId>
				<version>1.3</version>
				<executions>
					<execution>
						<id>generateKeyPair</id>
						<phase>package</phase>
						<goals>
							<goal>generateKeyPair</goal>
						</goals>
						<configuration>
							<skipIfExist>true</skipIfExist>
							<keystore>${project.build.directory}/keystore.jks</keystore>
							<alias>jsidplay2</alias>
							<storepass>jsidplay2</storepass>
							<keypass>jsidplay2</keypass>
							<dname>cn=http://kenchis.t15.org/jsidplay2, ou=Open Source,
								L=Berlin, ST=Berlin, o=JSIDPlay2, c=DE</dname>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<taskdef name="jfxdeploy" classname="com.sun.javafx.tools.ant.DeployFXTask"
									classpathref="maven.plugin.classpath" />

								<jfxdeploy width="1024" height="768"
									outdir="${project.build.directory}/deploy" outfile="${project.build.finalName}">
									<info title="${project.name}" />
									<application name="${project.name}" mainclass="ui.JSIDPlay2Main" />
									<permissions elevated="true" cacheCertificates="true" />
									<resources>
										<fileset dir="${project.build.directory}/dependency"
											includes="*.jar" />
									</resources>
									<platform javafx="2.0">
										<jvmarg value="-Xms512m" />
									</platform>
								</jfxdeploy>
							</target>
						</configuration>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>com.oracle.javafx</groupId>
						<artifactId>ant-javafx</artifactId>
						<version>2.0</version>
						<systemPath>${java.home}/../lib/ant-javafx.jar</systemPath>
						<scope>system</scope>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jarsigner-plugin</artifactId>
				<version>1.2</version>
				<executions>
					<execution>
						<id>sign</id>
						<phase>package</phase>
						<goals>
							<goal>sign</goal>
						</goals>
						<configuration>
							<verbose>true</verbose>
							<keystore>${project.build.directory}/keystore.jks</keystore>
							<alias>jsidplay2</alias>
							<storepass>jsidplay2</storepass>
							<keypass>jsidplay2</keypass>
							<archiveDirectory>${project.build.directory}/deploy</archiveDirectory>
							<includes>
								<include>*.jar</include>
							</includes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<!-- here the phase you need -->
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/deploy</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/deploy</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
