<?xml version="1.0" encoding="UTF-8"?>
<project name="build online content" default="all" xmlns:fx="javafx:com.sun.javafx.tools.ant">
	<description>
		Create online content of JSIDPlay2
    </description>

	<!-- HVSC -->
	<property name="hvsc_dir" location="${result_dir}/hvsc" />
	<property name="hvsc_zip" value="C64Music.zip" />
	<property name="hvsc_crc" value="C64Music.crc" />
	<property name="hvsc_subfolder" value="C64Music" />
	<property name="hvsc_max_size" value="37748736" />
	<!-- CGSC -->
	<property name="cgsc_dir" location="${result_dir}/cgsc" />
	<property name="cgsc_zip" value="CGSC.zip" />
	<property name="cgsc_crc" value="CGSC.crc" />
	<property name="cgsc_subfolder" value="CGSC" />
	<!-- HVMEC -->
	<property name="hvmec_dir" location="${result_dir}/hvmec" />
	<property name="hvmec_zip" value="HVMEC.zip" />
	<property name="hvmec_crc" value="HVMEC.crc" />
	<!-- Demos -->
	<property name="demos_dir" location="${result_dir}/demos" />
	<property name="demos_zip" value="Demos.zip" />
	<property name="demos_crc" value="Demos.crc" />
	<!-- Gamebase64 -->
	<property name="gamebase_dir" location="${result_dir}/gamebase" />
	<property name="gamebase_zip" value="GameBase64.zip" />
	<property name="gamebase_crc" value="GameBase64.crc" />
	<property name="gamebase_name" value="GameBase64" />
	<!-- jsiddevice -->
	<property name="jsiddevice_jar" value="jsiddevice.jar" />
	<!-- webstart -->
	<property name="webstart_dir" location="${result_dir}/webstart" />

	<target name="all" depends="jsiddevice,webstart,demos,gb64_import,hvmec_import,cgsc_import,hvsc_import" />

	<!-- ================================= 
          target: jsiddevice
          Description:
          Shrink JAR filesize.
         ================================= -->
	<target name="jsiddevice">
		<exec executable="${java.home}/bin/pack200" failonerror="true">
			<arg value="--strip-debug" />
			<arg value="${jsiddevice_jar}.pack.gz" />
			<arg value="${jsiddevice_jar}" />
		</exec>
		<exec executable="${java.home}/bin/unpack200" failonerror="true">
			<arg value="${jsiddevice_jar}.pack.gz" />
			<arg value="${jsiddevice_jar}" />
		</exec>
		<delete file="${jsiddevice_jar}.pack.gz" />
	</target>

	<!-- ================================= 
          target: webstart
          Description:
          Create Java WebStart Application.
         ================================= -->
	<target name="webstart">
		<taskdef resource="com/sun/javafx/tools/ant/antlib.xml" uri="javafx:com.sun.javafx.tools.ant" classpath="${java.home}/../lib/ant-javafx.jar" />
		<!-- Compile stylesheets -->
		<fx:csstobin outdir="target/classes">
			<fileset dir="target/classes" includes="**/*.css" />
		</fx:csstobin>
		<delete>
			<fileset dir="target/classes">
				<include name="**/*.css"/>
			</fileset>
		</delete>
		<!-- Create main jar -->
		<fx:jar destfile="${webstart_dir}/${project.artifactId}-${project.version}.jar">
			<fx:application name="${application.title}" mainClass="${javafx.main.class}" />
			<fx:resources>
				<fx:fileset dir="${webstart_dir}" includes="*.jar" />
			</fx:resources>
			<fileset dir="target/classes" />
			<fx:platform javafx="2.2+" j2se="1.8+">
				<fx:jvmarg value="-Xms256m" />
				<fx:jvmarg value="-Xmx768m" />
			</fx:platform>
			<manifest>
				<attribute name="Implementation-Vendor" value="${application.vendor}" />
				<attribute name="Implementation-Version" value="${project.version}" />
				<attribute name="url" value="${project.url}" />
			</manifest>
		</fx:jar>
		<!-- Unsign already signed jar -->
		<jar destfile="${webstart_dir}/bcprov-jdk16-stripped-1.46.jar">
			<zipfileset src="${webstart_dir}/bcprov-jdk16-1.46.jar" excludes="META-INF/**/*" />
		</jar>
		<move file="${webstart_dir}/bcprov-jdk16-stripped-1.46.jar" tofile="${webstart_dir}/bcprov-jdk16-1.46.jar" />
		<!-- Add required manifest attributes to ALL jars-->
		<apply executable="${java.home}/../bin/jar" failonerror="true">
			<arg value="ufm" />
			<srcfile />
			<arg value="${result_dir}/webstart/addToManifest.txt" />
			<fileset dir="${webstart_dir}" includes="*.jar" />
		</apply>
		<delete file="${result_dir}/webstart/addToManifest.txt" />
		<!-- sign all jars using the SAME certificate -->
		<exec executable="${java.home}/../bin/keytool" dir="${webstart_dir}" failonerror="true">
			<arg line="-selfcert -genkey -alias jsidplay2 -storepass jsidplay2 -keypass jsidplay2 -keystore jsidplay2.jks" />
			<arg value="-dname" />
			<arg value="cn=${application.vendor}, ou=${application.title}, o=Open Source, l=Berlin, st=Berlin, c=DE" />
		</exec>
		<signjar destdir="${webstart_dir}" keyStore="${webstart_dir}/jsidplay2.jks" storePass="jsidplay2" alias="jsidplay2" keyPass="jsidplay2">
			<fileset dir="${webstart_dir}" includes="*.jar" />
		</signjar>
		<delete file="${webstart_dir}/jsidplay2.jks" />
		<!-- create deployment types (webstart, native bundle, etc.) -->
		<fx:deploy embeddedWidth="100%" embeddedHeight="100%" width="${javafx.run.width}" height="${javafx.run.height}" nativeBundles="none" outdir="${webstart_dir}" outfile="${application.title}" embedjnlp="true" updatemode="background">
			<fx:application name="${application.title}" mainClass="${javafx.main.class}" />
			<fx:resources>
				<fx:fileset dir="${webstart_dir}" includes="*.jar" excludes="*-natives-*.jar" />
				<fx:fileset dir="${webstart_dir}" type="native" os="Windows" arch="x86_64 x86" includes="*-natives-windows.jar" />
				<fx:fileset dir="${webstart_dir}" type="native" os="Linux" arch="i386 ia64 x84_64" includes="*-natives-linux.jar" />
				<fx:fileset dir="${webstart_dir}" type="native" os="Mac OS" includes="*-natives-osx.jar" />
			</fx:resources>
			<fx:info title="${application.title}" vendor="${application.vendor}">
				<fx:splash href="jsidplay2.jpg" />
				<fx:icon href="jsidplay2.ico" kind="shortcut" width="32" height="32" depth="8" />
			</fx:info>
			<fx:permissions elevated="true" cachecertificates="true" />
			<fx:platform javafx="2.2+" j2se="1.8+">
				<fx:jvmarg value="-Xms256m" />
				<fx:jvmarg value="-Xmx768m" />
			</fx:platform>
			<fx:preferences shortcut="true" install="true" menu="true" />
		</fx:deploy>
	</target>

	<!-- ================================= 
          target: gb64_import
          Description:
          Import GameBase 64 database file (.mdb)
         ================================= -->
	<target name="check.gb64.mdbfile">
		<condition property="gb64.mdbfile.isset" value="true">
			<and>
				<isset property="gb64.mdbfile" />
				<not>
					<equals arg1="${gb64.mdbfile}" arg2="" />
				</not>
			</and>
		</condition>
	</target>
	<target name="gb64_import" if="gb64.mdbfile.isset" depends="check.gb64.mdbfile">
		<mkdir dir="${gamebase_dir}" />
		<copy file="${gb64.mdbfile}" tofile="${gamebase_dir}/${gamebase_name}.mdb" />
		<delete file="${gamebase_dir}/${gamebase_zip}" />
		<zip level="9" destfile="${gamebase_dir}/${gamebase_zip}" compress="true">
			<fileset dir="${gamebase_dir}">
				<include name="${gamebase_name}.mdb" />
			</fileset>
		</zip>
		<delete includeemptydirs="true">
			<fileset dir="${gamebase_dir}">
				<include name="${gamebase_name}.*" />
				<exclude name="${gamebase_name}.zip" />
			</fileset>
		</delete>

		<!-- create a CRC file -->
		<java fork="true" classname="ui.download.DownloadThread" outputproperty="checksum_gb64">
			<classpath path="${compile_classpath}" />
			<arg path="${gamebase_dir}/${gamebase_zip}" />
		</java>
		<length property="filesize_gb64" file="${gamebase_dir}/${gamebase_zip}" />
		<propertyfile file="${gamebase_dir}/${gamebase_crc}">
			<entry operation="=" type="string" key="filename" value="${gamebase_zip}" />
			<entry operation="=" type="string" key="size" value="${filesize_gb64}" />
			<entry operation="=" type="string" key="crc32" value="${checksum_gb64}" />
		</propertyfile>
	</target>

	<!-- ================================= 
          target: hvsc_import
          Description:
          Import HVSC ZIP file (.zip) containing another ZIP file
          into a single high compressed ZIP file.
         ================================= -->
	<target name="check.hvsc.zip">
		<condition property="hvsc.zip.isset" value="true">
			<and>
				<isset property="hvsc.zip" />
				<not>
					<equals arg1="${hvsc.zip}" arg2="" />
				</not>
			</and>
		</condition>
	</target>
	<target name="hvsc_import" if="hvsc.zip.isset" depends="check.hvsc.zip">
		<delete dir="${hvsc_dir}" />
		<mkdir dir="${hvsc_dir}" />
		<!-- Uncompress HVSC completely -->
		<unzip dest="${hvsc_dir}" src="${hvsc.zip}" />
		<unzip dest="${hvsc_dir}" src="${hvsc_dir}/${hvsc_zip}" />
		<delete>
			<fileset dir="${hvsc_dir}">
				<include name="*.zip" />
			</fileset>
		</delete>
		<!-- Compress HVSC -->
		<zip level="9" destfile="${hvsc_dir}/${hvsc_zip}" compress="true" update="false">
			<fileset dir="${hvsc_dir}/${hvsc_subfolder}">
				<include name="**/*.sid" />
				<include name="**/*.txt" />
			</fileset>
		</zip>
		<delete dir="${hvsc_dir}/${hvsc_subfolder}" />

		<!-- create a CRC file -->
		<java fork="true" classname="ui.download.DownloadThread" outputproperty="checksum_hvsc">
			<classpath path="${compile_classpath}" />
			<arg path="${hvsc_dir}/${hvsc_zip}" />
		</java>
		<length property="filesize_hvsc" file="${hvsc_dir}/${hvsc_zip}" />
		<propertyfile file="${hvsc_dir}/${hvsc_crc}">
			<entry operation="=" type="string" key="filename" value="${hvsc_zip}" />
			<entry operation="=" type="string" key="size" value="${filesize_hvsc}" />
			<entry operation="=" type="string" key="crc32" value="${checksum_hvsc}" />
		</propertyfile>

		<!-- Split ZIP file (sourceforge has a maximum file size limit) -->
		<java fork="true" classname="ui.musiccollection.createhvsc.Split">
			<classpath path="${compile_classpath}" />
			<arg value="bytes=${hvsc_max_size}" />
			<arg value="file=${hvsc_dir}/${hvsc_zip}" />
		</java>
		<delete file="${hvsc_dir}/${hvsc_zip}" />
	</target>

	<!-- ================================= 
          target: cgsc_import
          Description:
          Import CGSC ZIP file (.7z)
          into a ZIP file.
         ================================= -->
	<target name="check.cgsc.7z">
		<condition property="cgsc.7z.isset" value="true">
			<and>
				<isset property="zip7.home" />
				<not>
					<equals arg1="${zip7.home}" arg2="" />
				</not>
				<isset property="cgsc.7z" />
				<not>
					<equals arg1="${cgsc.7z}" arg2="" />
				</not>
			</and>
		</condition>
	</target>
	<target name="cgsc_import" if="cgsc.7z.isset" depends="check.cgsc.7z">
		<delete dir="${cgsc_dir}" />
		<mkdir dir="${cgsc_dir}" />
		<!-- Uncompress CGSC -->
		<exec executable="${zip7.home}/7z" failonerror="true">
			<arg value="x" />
			<arg value="-o${cgsc_dir}" />
			<arg value="${cgsc.7z}" />
		</exec>
		<!-- Compress CGSC -->
		<zip level="9" destfile="${cgsc_dir}/${cgsc_zip}" compress="true" update="false">
			<fileset dir="${cgsc_dir}/${cgsc_subfolder}">
				<include name="**/*.mus" />
				<include name="**/*.str" />
			</fileset>
		</zip>
		<delete dir="${cgsc_dir}/${cgsc_subfolder}" />

		<!-- create a CRC file -->
		<java fork="true" classname="ui.download.DownloadThread" outputproperty="checksum_cgsc">
			<classpath path="${compile_classpath}" />
			<arg path="${cgsc_dir}/${cgsc_zip}" />
		</java>
		<length property="filesize_cgsc" file="${cgsc_dir}/${cgsc_zip}" />
		<propertyfile file="${cgsc_dir}/${cgsc_crc}">
			<entry operation="=" type="string" key="filename" value="${cgsc_zip}" />
			<entry operation="=" type="string" key="size" value="${filesize_cgsc}" />
			<entry operation="=" type="string" key="crc32" value="${checksum_cgsc}" />
		</propertyfile>
	</target>

	<!-- ================================= 
          target: demos
          Description:
          Copy Demos ZIP file.
         ================================= -->
	<target name="check.test_src">
		<condition property="test_src.isset" value="true">
			<and>
				<isset property="test_src" />
				<not>
					<equals arg1="${test_src}" arg2="" />
				</not>
			</and>
		</condition>
	</target>
	<target name="demos" if="test_src.isset" depends="check.test_src">
		<delete dir="${demos_dir}" />
		<mkdir dir="${demos_dir}" />
		<copy todir="${demos_dir}" file="${test_src}/demos/${demos_zip}" />

		<java fork="true" classname="ui.download.DownloadThread" outputproperty="checksum">
			<classpath path="${compile_classpath}" />
			<arg path="${demos_dir}/${demos_zip}" />
		</java>
		<length property="filesize" file="${demos_dir}/${demos_zip}" />
		<propertyfile file="${demos_dir}/${demos_crc}">
			<entry operation="=" type="string" key="filename" value="${demos_zip}" />
			<entry operation="=" type="string" key="size" value="${filesize}" />
			<entry operation="=" type="string" key="crc32" value="${checksum}" />
		</propertyfile>
	</target>

	<!-- ================================= 
          target: hvmec
          Description:
          Import HVMEC BZ2 file (.bz2)
          into a ZIP file.
         ================================= -->
	<target name="check.hvmec.bz2">
		<condition property="hvmec.bz2.isset" value="true">
			<and>
				<isset property="hvmec.bz2" />
				<not>
					<equals arg1="${hvmec.bz2}" arg2="" />
				</not>
			</and>
		</condition>
	</target>
	<target name="hvmec_import" if="hvmec.bz2.isset" depends="check.hvmec.bz2">
		<delete dir="${hvmec_dir}" />
		<mkdir dir="${hvmec_dir}" />
		<untar src="${hvmec.bz2}" compression="gzip" dest="${hvmec_dir}" />
		<delete>
			<fileset dir="${hvmec_dir}">
				<include name="*.tar" />
			</fileset>
		</delete>
		<zip level="9" destfile="${hvmec_dir}/${hvmec_zip}" compress="true" update="false">
			<fileset dir="${hvmec_dir}">
				<include name="**/*" />
			</fileset>
		</zip>
		<delete dir="${hvmec_dir}/HVMEC" />

		<!-- create a CRC file -->
		<java fork="true" classname="ui.download.DownloadThread" outputproperty="checksum_hvmec">
			<classpath path="${compile_classpath}" />
			<arg path="${hvmec_dir}/${hvmec_zip}" />
		</java>
		<length property="filesize_hvmec" file="${hvmec_dir}/${hvmec_zip}" />
		<propertyfile file="${hvmec_dir}/${hvmec_crc}">
			<entry operation="=" type="string" key="filename" value="${hvmec_zip}" />
			<entry operation="=" type="string" key="size" value="${filesize_hvmec}" />
			<entry operation="=" type="string" key="crc32" value="${checksum_hvmec}" />
		</propertyfile>
	</target>

</project>
