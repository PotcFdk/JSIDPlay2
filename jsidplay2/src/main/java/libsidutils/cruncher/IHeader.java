package libsidutils.cruncher;

public interface IHeader {
	static byte headerC64SW[] = {
	    0x01,0x08,0x0b,0x08,(byte)0xef,0x00,(byte)0x9e,0x32,
	    0x30,0x36,0x31,0x00,0x00,0x00,0x78,(byte)0xa9,
	    0x38,(byte)0x85,0x01,(byte)0xa9,(byte)0xaa,(byte)0x85,0x2d,(byte)0xa9,
	    (byte)0xaa,(byte)0x85,0x2e,(byte)0xa2,0x00,(byte)0xbd,(byte)0xaa,(byte)0xaa,
	    (byte)0x95,0x4b,(byte)0xca,0x10,(byte)0xf8,(byte)0xa2,(byte)0xe7,(byte)0xbd,
	    0x46,0x08,(byte)0x9d,(byte)0xf6,0x00,(byte)0xca,(byte)0xd0,(byte)0xf7,
	    (byte)0xa0,(byte)0xaa,(byte)0xca,(byte)0xbd,(byte)0xaa,(byte)0xaa,(byte)0x9d,0x00,
	    (byte)0xff,(byte)0x8a,(byte)0xd0,(byte)0xf6,(byte)0xce,0x37,0x08,(byte)0xce,
	    0x34,0x08,(byte)0x88,(byte)0xd0,(byte)0xed,0x4c,0x16,0x01,
	    (byte)0x80,0x00,(byte)0x8d,(byte)0xaa,(byte)0xaa,(byte)0xe6,(byte)0xfa,(byte)0xd0,
	    0x02,(byte)0xe6,(byte)0xfb,(byte)0xca,0x60,(byte)0xa4,(byte)0xf8,(byte)0xa2,
	    0x02,0x20,(byte)0xca,0x01,(byte)0x85,(byte)0xf8,(byte)0x98,(byte)0xa2,
	    0x06,0x20,(byte)0xca,0x01,0x20,(byte)0xf9,0x00,(byte)0xa0,
	    0x00,(byte)0x98,(byte)0xa2,0x02,0x20,(byte)0xca,0x01,(byte)0xc5,
	    (byte)0xf8,(byte)0xd0,(byte)0xec,0x20,(byte)0xb7,0x01,(byte)0x85,0x2f,
	    0x4a,(byte)0xd0,0x3d,0x20,(byte)0x9b,0x01,(byte)0x90,0x46,
	    0x20,(byte)0x9b,0x01,(byte)0x90,(byte)0xd0,(byte)0xc8,0x20,(byte)0xb7,
	    0x01,(byte)0x85,0x2f,(byte)0xc9,0x40,(byte)0x90,0x0b,(byte)0xa2,
	    0x02,0x20,(byte)0xc5,0x01,(byte)0x85,0x2f,0x20,(byte)0xb7,
	    0x01,(byte)0xa8,0x20,(byte)0xb7,0x01,(byte)0xaa,(byte)0xbd,(byte)0xcd,
	    0x01,(byte)0xe0,0x10,(byte)0x90,0x06,(byte)0x8a,(byte)0xa2,0x04,
	    0x20,(byte)0xc5,0x01,(byte)0xa6,0x2f,(byte)0xe8,0x20,(byte)0xf9,
	    0x00,(byte)0xd0,(byte)0xfb,(byte)0x88,(byte)0xd0,(byte)0xf8,(byte)0xf0,(byte)0xaf,
	    0x20,(byte)0xb7,0x01,(byte)0xc9,0x7f,(byte)0xf0,0x25,(byte)0xe9,
	    0x00,(byte)0xa2,0x00,0x20,(byte)0xca,0x01,(byte)0x85,0x30,
	    (byte)0xa2,0x08,0x20,(byte)0xc5,0x01,0x65,(byte)0xfa,(byte)0xa6,
	    0x2f,(byte)0x85,0x2f,(byte)0xa5,(byte)0xfb,(byte)0xe5,0x30,(byte)0x85,
	    0x30,(byte)0xe8,(byte)0xb1,0x2f,(byte)0xc8,0x20,(byte)0xf9,0x00,
	    (byte)0xd0,(byte)0xf8,(byte)0xf0,(byte)0xd2,(byte)0xa9,0x37,(byte)0x85,0x01,
	    0x58,0x4c,(byte)0xaa,(byte)0xaa,0x06,(byte)0xf7,(byte)0xd0,0x17,
	    0x48,(byte)0xad,(byte)0xaa,(byte)0xaa,0x2a,(byte)0x85,(byte)0xf7,(byte)0xee,
	    (byte)0xa1,0x01,(byte)0xd0,0x0a,(byte)0xee,(byte)0xa2,0x01,(byte)0xd0,
	    0x05,(byte)0xa9,0x4b,(byte)0x8d,(byte)0xa1,0x01,0x68,0x60,
	    (byte)0xe8,(byte)0x8a,0x20,(byte)0x9b,0x01,(byte)0x90,0x0b,(byte)0xe8,
	    (byte)0xe0,0x07,(byte)0xd0,(byte)0xf6,(byte)0xf0,0x04,0x20,(byte)0x9b,
	    0x01,0x2a,(byte)0xca,(byte)0xd0,(byte)0xf9,0x18,0x60,0x00,
	    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	    0x00,0x00,0x00,0x00,0x00,0x00
	};

	FixEntry fixTableC64SW[] = {
		    new FixEntry(FixType.ftBEndHi, 0x0817 -0x07ff),
		    new FixEntry(FixType.ftOverlap, 0x081b -0x07ff),
		    new FixEntry(FixType.ftOverlapLo, 0x081d -0x07ff),
		    new FixEntry(FixType.ftOverlapHi, 0x081e -0x07ff),
		    new FixEntry(FixType.ftStackSize, 0x0825 -0x07ff),
		    new FixEntry(FixType.ftReloc, 0x0828 -0x07ff),
		    new FixEntry(FixType.ftSizePages, 0x0830 -0x07ff),
		    new FixEntry(FixType.ftSizeLo, 0x0833 -0x07ff),
		    new FixEntry(FixType.ftSizeHi, 0x0834 -0x07ff),
		    new FixEntry(FixType.ftEndLo, 0x0836 -0x07ff),
		    new FixEntry(FixType.ftEndHi, 0x0837 -0x07ff),
		    new FixEntry(FixType.ftReloc, 0x083d -0x07ff),
		    new FixEntry(FixType.ftReloc, 0x0840 -0x07ff),
		    new FixEntry(FixType.ftDeCall, 0x0844 -0x07ff),
		    new FixEntry(FixType.ftEscValue, 0x0848 -0x07ff),
		    new FixEntry(FixType.ftOutposLo, 0x084a -0x07ff),
		    new FixEntry(FixType.ftOutposHi, 0x084b -0x07ff),
		    new FixEntry(FixType.ftEscBits, 0x0857 -0x07ff),
		    new FixEntry(FixType.ftEsc8Bits, 0x085f -0x07ff),
		    new FixEntry(FixType.ftEscBits, 0x086a -0x07ff),
		    new FixEntry(FixType.ft1MaxGamma, 0x088b -0x07ff),
		    new FixEntry(FixType.ft8MaxGamma, 0x088f -0x07ff),
		    new FixEntry(FixType.ft2MaxGamma, 0x08bb -0x07ff),
		    new FixEntry(FixType.ftExtraBits, 0x08c1 -0x07ff),
		    new FixEntry(FixType.ftMemConfig, 0x08e4 -0x07ff),
		    new FixEntry(FixType.ftCli, 0x08e7 -0x07ff),
		    new FixEntry(FixType.ftExecLo, 0x08e9 -0x07ff),
		    new FixEntry(FixType.ftExecHi, 0x08ea -0x07ff),
		    new FixEntry(FixType.ftInposLo, 0x08f1 -0x07ff),
		    new FixEntry(FixType.ftInposHi, 0x08f2 -0x07ff),
		    new FixEntry(FixType.ftMaxGamma, 0x0910 -0x07ff),
		    new FixEntry(FixType.ftEnd,0)
		};
	
	static byte headerC64S[] = {
	    0x01,0x08,0x0b,0x08,(byte)0xef,0x00,(byte)0x9e,0x32,
	    0x30,0x36,0x31,0x00,0x00,0x00,0x78,(byte)0xa9,
	    0x38,(byte)0x85,0x01,(byte)0xa9,(byte)0xaa,(byte)0x85,0x2d,(byte)0xa9,
	    (byte)0xaa,(byte)0x85,0x2e,(byte)0xa2,(byte)0xe0,(byte)0xbd,0x3c,0x08,
	    (byte)0x9d,(byte)0xf6,0x00,(byte)0xca,(byte)0xd0,(byte)0xf7,(byte)0xa0,(byte)0xaa,
	    (byte)0xca,(byte)0xbd,(byte)0xaa,(byte)0xaa,(byte)0x9d,0x00,(byte)0xff,(byte)0x8a,
	    (byte)0xd0,(byte)0xf6,(byte)0xce,0x2d,0x08,(byte)0xce,0x2a,0x08,
	    (byte)0x88,(byte)0xd0,(byte)0xed,0x4c,0x16,0x01,(byte)0x80,0x00,
	    (byte)0x8d,(byte)0xaa,(byte)0xaa,(byte)0xe6,(byte)0xfa,(byte)0xd0,0x02,(byte)0xe6,
	    (byte)0xfb,(byte)0xca,0x60,(byte)0xa4,(byte)0xf8,(byte)0xa2,0x02,0x20,
	    (byte)0xc3,0x01,(byte)0x85,(byte)0xf8,(byte)0x98,(byte)0xa2,0x06,0x20,
	    (byte)0xc3,0x01,0x20,(byte)0xf9,0x00,(byte)0xa0,0x00,(byte)0x98,
	    (byte)0xa2,0x02,0x20,(byte)0xc3,0x01,(byte)0xc5,(byte)0xf8,(byte)0xd0,
	    (byte)0xec,0x20,(byte)0xb0,0x01,(byte)0x85,0x2f,0x4a,(byte)0xd0,
	    0x3d,0x20,(byte)0x9b,0x01,(byte)0x90,0x46,0x20,(byte)0x9b,
	    0x01,(byte)0x90,(byte)0xd0,(byte)0xc8,0x20,(byte)0xb0,0x01,(byte)0x85,
	    0x2f,(byte)0xc9,0x40,(byte)0x90,0x0b,(byte)0xa2,0x02,0x20,
	    (byte)0xbe,0x01,(byte)0x85,0x2f,0x20,(byte)0xb0,0x01,(byte)0xa8,
	    0x20,(byte)0xb0,0x01,(byte)0xaa,(byte)0xbd,(byte)0xc6,0x01,(byte)0xe0,
	    0x10,(byte)0x90,0x06,(byte)0x8a,(byte)0xa2,0x04,0x20,(byte)0xbe,
	    0x01,(byte)0xa6,0x2f,(byte)0xe8,0x20,(byte)0xf9,0x00,(byte)0xd0,
	    (byte)0xfb,(byte)0x88,(byte)0xd0,(byte)0xf8,(byte)0xf0,(byte)0xaf,0x20,(byte)0xb0,
	    0x01,(byte)0xc9,0x7f,(byte)0xf0,0x25,(byte)0xe9,0x00,(byte)0xa2,
	    0x00,0x20,(byte)0xc3,0x01,(byte)0x85,0x30,(byte)0xa2,0x08,
	    0x20,(byte)0xbe,0x01,0x65,(byte)0xfa,(byte)0xa6,0x2f,(byte)0x85,
	    0x2f,(byte)0xa5,(byte)0xfb,(byte)0xe5,0x30,(byte)0x85,0x30,(byte)0xe8,
	    (byte)0xb1,0x2f,(byte)0xc8,0x20,(byte)0xf9,0x00,(byte)0xd0,(byte)0xf8,
	    (byte)0xf0,(byte)0xd2,(byte)0xa9,0x37,(byte)0x85,0x01,0x58,0x4c,
	    (byte)0xaa,(byte)0xaa,0x06,(byte)0xf7,(byte)0xd0,0x10,0x48,(byte)0xad,
	    (byte)0xaa,(byte)0xaa,0x2a,(byte)0x85,(byte)0xf7,(byte)0xee,(byte)0xa1,0x01,
	    (byte)0xd0,0x03,(byte)0xee,(byte)0xa2,0x01,0x68,0x60,(byte)0xe8,
	    (byte)0x8a,0x20,(byte)0x9b,0x01,(byte)0x90,0x0b,(byte)0xe8,(byte)0xe0,
	    0x07,(byte)0xd0,(byte)0xf6,(byte)0xf0,0x04,0x20,(byte)0x9b,0x01,
	    0x2a,(byte)0xca,(byte)0xd0,(byte)0xf9,0x18,0x60,0x00,0x00,
	    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	    0x00,0x00,0x00,0x00,0x00
	};
	FixEntry fixTableC64S[] = {
		    new FixEntry(FixType.ftBEndHi, 0x0817 -0x07ff),
		    new FixEntry(FixType.ftStackSize, 0x081b -0x07ff),
		    new FixEntry(FixType.ftReloc, 0x081e -0x07ff),
		    new FixEntry(FixType.ftSizePages, 0x0826 -0x07ff),
		    new FixEntry(FixType.ftSizeLo, 0x0829 -0x07ff),
		    new FixEntry(FixType.ftSizeHi, 0x082a -0x07ff),
		    new FixEntry(FixType.ftEndLo, 0x082c -0x07ff),
		    new FixEntry(FixType.ftEndHi, 0x082d -0x07ff),
		    new FixEntry(FixType.ftReloc, 0x0833 -0x07ff),
		    new FixEntry(FixType.ftReloc, 0x0836 -0x07ff),
		    new FixEntry(FixType.ftDeCall, 0x083a -0x07ff),
		    new FixEntry(FixType.ftEscValue, 0x083e -0x07ff),
		    new FixEntry(FixType.ftOutposLo, 0x0840 -0x07ff),
		    new FixEntry(FixType.ftOutposHi, 0x0841 -0x07ff),
		    new FixEntry(FixType.ftEscBits, 0x084d -0x07ff),
		    new FixEntry(FixType.ftEsc8Bits, 0x0855 -0x07ff),
		    new FixEntry(FixType.ftEscBits, 0x0860 -0x07ff),
		    new FixEntry(FixType.ft1MaxGamma, 0x0881 -0x07ff),
		    new FixEntry(FixType.ft8MaxGamma, 0x0885 -0x07ff),
		    new FixEntry(FixType.ft2MaxGamma, 0x08b1 -0x07ff),
		    new FixEntry(FixType.ftExtraBits, 0x08b7 -0x07ff),
		    new FixEntry(FixType.ftMemConfig, 0x08da -0x07ff),
		    new FixEntry(FixType.ftCli, 0x08dd -0x07ff),
		    new FixEntry(FixType.ftExecLo, 0x08df -0x07ff),
		    new FixEntry(FixType.ftExecHi, 0x08e0 -0x07ff),
		    new FixEntry(FixType.ftInposLo, 0x08e7 -0x07ff),
		    new FixEntry(FixType.ftInposHi, 0x08e8 -0x07ff),
		    new FixEntry(FixType.ftMaxGamma, 0x08ff -0x07ff),
		    new FixEntry(FixType.ftEnd,0)
	};
	static byte headerC64SB[] = {
	    0x01,0x08,0x0b,0x08,(byte)0xef,0x00,(byte)0x9e,0x32,
	    0x30,0x36,0x31,0x00,0x00,0x00,0x78,(byte)0xa9,
	    0x38,(byte)0x85,0x01,(byte)0xa9,(byte)0xaa,(byte)0x85,0x2d,(byte)0xa9,
	    (byte)0xaa,(byte)0x85,0x2e,(byte)0xa2,(byte)0xe5,(byte)0xbd,0x3c,0x08,
	    (byte)0x9d,(byte)0xf6,0x00,(byte)0xca,(byte)0xd0,(byte)0xf7,(byte)0xa0,(byte)0xaa,
	    (byte)0xca,(byte)0xbd,(byte)0xaa,(byte)0xaa,(byte)0x9d,0x00,(byte)0xff,(byte)0x8a,
	    (byte)0xd0,(byte)0xf6,(byte)0xce,0x2d,0x08,(byte)0xce,0x2a,0x08,
	    (byte)0x88,(byte)0xd0,(byte)0xed,0x4c,0x16,0x01,(byte)0x80,0x00,
	    (byte)0x8d,(byte)0xaa,(byte)0xaa,(byte)0xe6,(byte)0xfa,(byte)0xd0,0x02,(byte)0xe6,
	    (byte)0xfb,(byte)0xca,0x60,(byte)0xa4,(byte)0xf8,(byte)0xa2,0x02,0x20,
	    (byte)0xc8,0x01,(byte)0x85,(byte)0xf8,(byte)0x98,(byte)0xa2,0x06,0x20,
	    (byte)0xc8,0x01,0x20,(byte)0xf9,0x00,(byte)0xa0,0x00,(byte)0x98,
	    (byte)0xa2,0x02,0x20,(byte)0xc8,0x01,(byte)0xc5,(byte)0xf8,(byte)0xd0,
	    (byte)0xec,0x20,(byte)0xb5,0x01,(byte)0x85,0x2f,0x4a,(byte)0xd0,
	    0x3d,0x20,(byte)0xa0,0x01,(byte)0x90,0x46,0x20,(byte)0xa0,
	    0x01,(byte)0x90,(byte)0xd0,(byte)0xc8,0x20,(byte)0xb5,0x01,(byte)0x85,
	    0x2f,(byte)0xc9,0x40,(byte)0x90,0x0b,(byte)0xa2,0x02,0x20,
	    (byte)0xc3,0x01,(byte)0x85,0x2f,0x20,(byte)0xb5,0x01,(byte)0xa8,
	    0x20,(byte)0xb5,0x01,(byte)0xaa,(byte)0xbd,(byte)0xcb,0x01,(byte)0xe0,
	    0x10,(byte)0x90,0x06,(byte)0x8a,(byte)0xa2,0x04,0x20,(byte)0xc3,
	    0x01,(byte)0xa6,0x2f,(byte)0xe8,0x20,(byte)0xf9,0x00,(byte)0xd0,
	    (byte)0xfb,(byte)0x88,(byte)0xd0,(byte)0xf8,(byte)0xf0,(byte)0xaf,0x20,(byte)0xb5,
	    0x01,(byte)0xc9,0x7f,(byte)0xf0,0x25,(byte)0xe9,0x00,(byte)0xa2,
	    0x00,0x20,(byte)0xc8,0x01,(byte)0x85,0x30,(byte)0xa2,0x08,
	    0x20,(byte)0xc3,0x01,0x65,(byte)0xfa,(byte)0xa6,0x2f,(byte)0x85,
	    0x2f,(byte)0xa5,(byte)0xfb,(byte)0xe5,0x30,(byte)0x85,0x30,(byte)0xe8,
	    (byte)0xb1,0x2f,(byte)0xc8,0x20,(byte)0xf9,0x00,(byte)0xd0,(byte)0xf8,
	    (byte)0xf0,(byte)0xd2,(byte)0xa9,0x37,(byte)0x85,0x01,0x58,(byte)0xa9,
	    0x00,0x20,0x71,(byte)0xa8,0x4c,(byte)0xae,(byte)0xa7,0x06,
	    (byte)0xf7,(byte)0xd0,0x10,0x48,(byte)0xad,(byte)0xaa,(byte)0xaa,0x2a,
	    (byte)0x85,(byte)0xf7,(byte)0xee,(byte)0xa6,0x01,(byte)0xd0,0x03,(byte)0xee,
	    (byte)0xa7,0x01,0x68,0x60,(byte)0xe8,(byte)0x8a,0x20,(byte)0xa0,
	    0x01,(byte)0x90,0x0b,(byte)0xe8,(byte)0xe0,0x07,(byte)0xd0,(byte)0xf6,
	    (byte)0xf0,0x04,0x20,(byte)0xa0,0x01,0x2a,(byte)0xca,(byte)0xd0,
	    (byte)0xf9,0x18,0x60,0x00,0x00,0x00,0x00,0x00,
	    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	    0x00,0x00
	};
	FixEntry fixTableC64SB[] = {
		    new FixEntry(FixType.ftBEndHi, 0x0817 -0x07ff),
		    new FixEntry(FixType.ftStackSize, 0x081b -0x07ff),
		    new FixEntry(FixType.ftReloc, 0x081e -0x07ff),
		    new FixEntry(FixType.ftSizePages, 0x0826 -0x07ff),
		    new FixEntry(FixType.ftSizeLo, 0x0829 -0x07ff),
		    new FixEntry(FixType.ftSizeHi, 0x082a -0x07ff),
		    new FixEntry(FixType.ftEndLo, 0x082c -0x07ff),
		    new FixEntry(FixType.ftEndHi, 0x082d -0x07ff),
		    new FixEntry(FixType.ftReloc, 0x0833 -0x07ff),
		    new FixEntry(FixType.ftReloc, 0x0836 -0x07ff),
		    new FixEntry(FixType.ftDeCall, 0x083a -0x07ff),
		    new FixEntry(FixType.ftEscValue, 0x083e -0x07ff),
		    new FixEntry(FixType.ftOutposLo, 0x0840 -0x07ff),
		    new FixEntry(FixType.ftOutposHi, 0x0841 -0x07ff),
		    new FixEntry(FixType.ftEscBits, 0x084d -0x07ff),
		    new FixEntry(FixType.ftEsc8Bits, 0x0855 -0x07ff),
		    new FixEntry(FixType.ftEscBits, 0x0860 -0x07ff),
		    new FixEntry(FixType.ft1MaxGamma, 0x0881 -0x07ff),
		    new FixEntry(FixType.ft8MaxGamma, 0x0885 -0x07ff),
		    new FixEntry(FixType.ft2MaxGamma, 0x08b1 -0x07ff),
		    new FixEntry(FixType.ftExtraBits, 0x08b7 -0x07ff),
		    new FixEntry(FixType.ftMemConfig, 0x08da -0x07ff),
		    new FixEntry(FixType.ftCli, 0x08dd -0x07ff),
		    new FixEntry(FixType.ftInposLo, 0x08ec -0x07ff),
		    new FixEntry(FixType.ftInposHi, 0x08ed -0x07ff),
		    new FixEntry(FixType.ftMaxGamma, 0x0904 -0x07ff),
		    new FixEntry(FixType.ftEnd,0)
	};
	static byte headerC64W[] = {
	    0x01,0x08,0x0b,0x08,(byte)0xef,0x00,(byte)0x9e,0x32,
	    0x30,0x36,0x31,0x00,0x00,0x00,0x78,(byte)0xee,
	    0x30,(byte)0xd0,(byte)0xa9,0x38,(byte)0x85,0x01,(byte)0xa2,0x00,
	    (byte)0xbd,(byte)0xaa,(byte)0xaa,(byte)0x95,0x4b,(byte)0xca,0x10,(byte)0xf8,
	    (byte)0xa2,0x3b,(byte)0xbd,0x4c,0x08,(byte)0x9d,(byte)0xff,0x01,
	    (byte)0xca,(byte)0xd0,(byte)0xf7,(byte)0xa2,(byte)0xbf,(byte)0xbd,(byte)0x86,0x08,
	    (byte)0x9d,(byte)0xf6,0x00,(byte)0xca,(byte)0xd0,(byte)0xf7,(byte)0xa0,(byte)0xaa,
	    (byte)0xca,(byte)0xbd,(byte)0xaa,(byte)0xaa,(byte)0x9d,0x00,(byte)0xff,(byte)0x8a,
	    (byte)0xd0,(byte)0xf6,(byte)0xce,0x3d,0x08,(byte)0xce,0x3a,0x08,
	    (byte)0x88,(byte)0xd0,(byte)0xed,0x4c,0x16,0x01,0x48,(byte)0xad,
	    (byte)0xaa,(byte)0xaa,0x2a,(byte)0x85,(byte)0xf7,(byte)0xee,0x02,0x02,
	    (byte)0xd0,0x0a,(byte)0xee,0x03,0x02,(byte)0xd0,0x05,(byte)0xa9,
	    0x4b,(byte)0x8d,0x02,0x02,0x68,0x60,(byte)0xe8,(byte)0x8a,
	    0x06,(byte)0xf7,(byte)0xd0,0x03,0x20,0x00,0x02,(byte)0x90,
	    0x12,(byte)0xe8,(byte)0xe0,0x07,(byte)0xd0,(byte)0xf2,(byte)0xf0,0x0b,
	    (byte)0xa2,0x07,(byte)0xe8,0x06,(byte)0xf7,(byte)0xd0,0x03,0x20,
	    0x00,0x02,0x2a,(byte)0xca,(byte)0xd0,(byte)0xf5,0x18,0x60,
	    (byte)0x80,0x00,(byte)0x8d,(byte)0xaa,(byte)0xaa,(byte)0xe6,(byte)0xfa,(byte)0xd0,
	    0x02,(byte)0xe6,(byte)0xfb,(byte)0xca,0x60,(byte)0xa4,(byte)0xf8,(byte)0xa2,
	    0x02,0x20,0x36,0x02,(byte)0x85,(byte)0xf8,(byte)0x98,(byte)0xa2,
	    0x06,0x20,0x36,0x02,0x20,(byte)0xf9,0x00,(byte)0xa0,
	    0x00,(byte)0x98,(byte)0xa2,0x02,0x20,0x36,0x02,(byte)0xc5,
	    (byte)0xf8,(byte)0xd0,(byte)0xec,0x20,0x18,0x02,(byte)0x85,0x2d,
	    0x4a,(byte)0xd0,0x3f,0x20,0x2c,0x02,0x4a,(byte)0x90,
	    0x47,0x20,0x2c,0x02,0x4a,(byte)0x90,(byte)0xce,(byte)0xc8,
	    0x20,0x18,0x02,(byte)0x85,0x2d,(byte)0xc9,0x40,(byte)0x90,
	    0x0b,(byte)0xa2,0x02,0x20,0x2d,0x02,(byte)0x85,0x2d,
	    0x20,0x18,0x02,(byte)0xa8,0x20,0x18,0x02,(byte)0xaa,
	    (byte)0xbd,(byte)0xa5,0x01,(byte)0xe0,0x10,(byte)0x90,0x06,(byte)0x8a,
	    (byte)0xa2,0x04,0x20,0x2d,0x02,(byte)0xa6,0x2d,(byte)0xe8,
	    0x20,(byte)0xf9,0x00,(byte)0xd0,(byte)0xfb,(byte)0x88,(byte)0xd0,(byte)0xf8,
	    (byte)0xf0,(byte)0xad,0x20,0x18,0x02,(byte)0xc9,0x7f,(byte)0xf0,
	    0x23,(byte)0xe9,0x00,(byte)0xa2,0x00,0x20,0x36,0x02,
	    (byte)0x85,0x2e,0x20,0x2a,0x02,0x65,(byte)0xfa,(byte)0xa6,
	    0x2d,(byte)0x85,0x2d,(byte)0xa5,(byte)0xfb,(byte)0xe5,0x2e,(byte)0x85,
	    0x2e,(byte)0xe8,(byte)0xb1,0x2d,(byte)0xc8,0x20,(byte)0xf9,0x00,
	    (byte)0xd0,(byte)0xf8,(byte)0xf0,(byte)0xd4,(byte)0xa9,0x37,(byte)0x85,0x01,
	    (byte)0xce,0x30,(byte)0xd0,(byte)0xa5,(byte)0xfa,(byte)0x85,0x2d,(byte)0xa5,
	    (byte)0xfb,(byte)0x85,0x2e,0x58,0x4c,(byte)0xaa,(byte)0xaa,0x00,
	    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	    0x00,0x00,0x00,0x00,0x00,0x00
	};
	FixEntry fixTableC64W[] = {
		    new FixEntry(FixType.ftFastDisable, 0x080e -0x07ff),
		    new FixEntry(FixType.ftOverlap, 0x0816 -0x07ff),
		    new FixEntry(FixType.ftOverlapLo, 0x0818 -0x07ff),
		    new FixEntry(FixType.ftOverlapHi, 0x0819 -0x07ff),
		    new FixEntry(FixType.ftIBufferSize, 0x0820 -0x07ff),
		    new FixEntry(FixType.ftReloc, 0x0823 -0x07ff),
		    new FixEntry(FixType.ftStackSize, 0x082b -0x07ff),
		    new FixEntry(FixType.ftReloc, 0x082e -0x07ff),
		    new FixEntry(FixType.ftSizePages, 0x0836 -0x07ff),
		    new FixEntry(FixType.ftSizeLo, 0x0839 -0x07ff),
		    new FixEntry(FixType.ftSizeHi, 0x083a -0x07ff),
		    new FixEntry(FixType.ftEndLo, 0x083c -0x07ff),
		    new FixEntry(FixType.ftEndHi, 0x083d -0x07ff),
		    new FixEntry(FixType.ftReloc, 0x0843 -0x07ff),
		    new FixEntry(FixType.ftReloc, 0x0846 -0x07ff),
		    new FixEntry(FixType.ftDeCall, 0x084a -0x07ff),
		    new FixEntry(FixType.ftInposLo, 0x084f -0x07ff),
		    new FixEntry(FixType.ftInposHi, 0x0850 -0x07ff),
		    new FixEntry(FixType.ftMaxGamma, 0x0872 -0x07ff),
		    new FixEntry(FixType.ftEscValue, 0x0888 -0x07ff),
		    new FixEntry(FixType.ftOutposLo, 0x088a -0x07ff),
		    new FixEntry(FixType.ftOutposHi, 0x088b -0x07ff),
		    new FixEntry(FixType.ftEscBits, 0x0897 -0x07ff),
		    new FixEntry(FixType.ftEsc8Bits, 0x089f -0x07ff),
		    new FixEntry(FixType.ftEscBits, 0x08aa -0x07ff),
		    new FixEntry(FixType.ft1MaxGamma, 0x08cd -0x07ff),
		    new FixEntry(FixType.ft8MaxGamma, 0x08d1 -0x07ff),
		    new FixEntry(FixType.ft2MaxGamma, 0x08fd -0x07ff),
		    new FixEntry(FixType.ftExtraBits, 0x0903 -0x07ff),
		    new FixEntry(FixType.ftMemConfig, 0x0924 -0x07ff),
		    new FixEntry(FixType.ftFastDisable, 0x0927 -0x07ff),
		    new FixEntry(FixType.ftCli, 0x0932 -0x07ff),
		    new FixEntry(FixType.ftExecLo, 0x0934 -0x07ff),
		    new FixEntry(FixType.ftExecHi, 0x0935 -0x07ff),
		    new FixEntry(FixType.ftEnd,0)
	};
	static byte headerC64[] = {
	    0x01,0x08,0x0b,0x08,(byte)0xef,0x00,(byte)0x9e,0x32,
	    0x30,0x36,0x31,0x00,0x00,0x00,0x78,(byte)0xee,
	    0x30,(byte)0xd0,(byte)0xa9,0x38,(byte)0x85,0x01,(byte)0xa2,0x34,
	    (byte)0xbd,0x42,0x08,(byte)0x9d,(byte)0xff,0x01,(byte)0xca,(byte)0xd0,
	    (byte)0xf7,(byte)0xa2,(byte)0xbf,(byte)0xbd,0x75,0x08,(byte)0x9d,(byte)0xf6,
	    0x00,(byte)0xca,(byte)0xd0,(byte)0xf7,(byte)0xa0,(byte)0xaa,(byte)0xca,(byte)0xbd,
	    (byte)0xaa,(byte)0xaa,(byte)0x9d,0x00,(byte)0xff,(byte)0x8a,(byte)0xd0,(byte)0xf6,
	    (byte)0xce,0x33,0x08,(byte)0xce,0x30,0x08,(byte)0x88,(byte)0xd0,
	    (byte)0xed,0x4c,0x16,0x01,0x48,(byte)0xad,(byte)0xaa,(byte)0xaa,
	    0x2a,(byte)0x85,(byte)0xf7,(byte)0xee,0x02,0x02,(byte)0xd0,0x03,
	    (byte)0xee,0x03,0x02,0x68,0x60,(byte)0xe8,(byte)0x8a,0x06,
	    (byte)0xf7,(byte)0xd0,0x03,0x20,0x00,0x02,(byte)0x90,0x12,
	    (byte)0xe8,(byte)0xe0,0x07,(byte)0xd0,(byte)0xf2,(byte)0xf0,0x0b,(byte)0xa2,
	    0x07,(byte)0xe8,0x06,(byte)0xf7,(byte)0xd0,0x03,0x20,0x00,
	    0x02,0x2a,(byte)0xca,(byte)0xd0,(byte)0xf5,0x18,0x60,(byte)0x80,
	    0x00,(byte)0x8d,(byte)0xaa,(byte)0xaa,(byte)0xe6,(byte)0xfa,(byte)0xd0,0x02,
	    (byte)0xe6,(byte)0xfb,(byte)0xca,0x60,(byte)0xa4,(byte)0xf8,(byte)0xa2,0x02,
	    0x20,0x2f,0x02,(byte)0x85,(byte)0xf8,(byte)0x98,(byte)0xa2,0x06,
	    0x20,0x2f,0x02,0x20,(byte)0xf9,0x00,(byte)0xa0,0x00,
	    (byte)0x98,(byte)0xa2,0x02,0x20,0x2f,0x02,(byte)0xc5,(byte)0xf8,
	    (byte)0xd0,(byte)0xec,0x20,0x11,0x02,(byte)0x85,0x2d,0x4a,
	    (byte)0xd0,0x3f,0x20,0x25,0x02,0x4a,(byte)0x90,0x47,
	    0x20,0x25,0x02,0x4a,(byte)0x90,(byte)0xce,(byte)0xc8,0x20,
	    0x11,0x02,(byte)0x85,0x2d,(byte)0xc9,0x40,(byte)0x90,0x0b,
	    (byte)0xa2,0x02,0x20,0x26,0x02,(byte)0x85,0x2d,0x20,
	    0x11,0x02,(byte)0xa8,0x20,0x11,0x02,(byte)0xaa,(byte)0xbd,
	    (byte)0xa5,0x01,(byte)0xe0,0x10,(byte)0x90,0x06,(byte)0x8a,(byte)0xa2,
	    0x04,0x20,0x26,0x02,(byte)0xa6,0x2d,(byte)0xe8,0x20,
	    (byte)0xf9,0x00,(byte)0xd0,(byte)0xfb,(byte)0x88,(byte)0xd0,(byte)0xf8,(byte)0xf0,
	    (byte)0xad,0x20,0x11,0x02,(byte)0xc9,0x7f,(byte)0xf0,0x23,
	    (byte)0xe9,0x00,(byte)0xa2,0x00,0x20,0x2f,0x02,(byte)0x85,
	    0x2e,0x20,0x23,0x02,0x65,(byte)0xfa,(byte)0xa6,0x2d,
	    (byte)0x85,0x2d,(byte)0xa5,(byte)0xfb,(byte)0xe5,0x2e,(byte)0x85,0x2e,
	    (byte)0xe8,(byte)0xb1,0x2d,(byte)0xc8,0x20,(byte)0xf9,0x00,(byte)0xd0,
	    (byte)0xf8,(byte)0xf0,(byte)0xd4,(byte)0xa9,0x37,(byte)0x85,0x01,(byte)0xce,
	    0x30,(byte)0xd0,(byte)0xa5,(byte)0xfa,(byte)0x85,0x2d,(byte)0xa5,(byte)0xfb,
	    (byte)0x85,0x2e,0x58,0x4c,(byte)0xaa,(byte)0xaa,0x00,0x00,
	    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	    0x00,0x00,0x00,0x00,0x00
	};
	FixEntry fixTableC64[] = {
		    new FixEntry(FixType.ftFastDisable, 0x080e -0x07ff),
		    new FixEntry(FixType.ftIBufferSize, 0x0816 -0x07ff),
		    new FixEntry(FixType.ftReloc, 0x0819 -0x07ff),
		    new FixEntry(FixType.ftStackSize, 0x0821 -0x07ff),
		    new FixEntry(FixType.ftReloc, 0x0824 -0x07ff),
		    new FixEntry(FixType.ftSizePages, 0x082c -0x07ff),
		    new FixEntry(FixType.ftSizeLo, 0x082f -0x07ff),
		    new FixEntry(FixType.ftSizeHi, 0x0830 -0x07ff),
		    new FixEntry(FixType.ftEndLo, 0x0832 -0x07ff),
		    new FixEntry(FixType.ftEndHi, 0x0833 -0x07ff),
		    new FixEntry(FixType.ftReloc, 0x0839 -0x07ff),
		    new FixEntry(FixType.ftReloc, 0x083c -0x07ff),
		    new FixEntry(FixType.ftDeCall, 0x0840 -0x07ff),
		    new FixEntry(FixType.ftInposLo, 0x0845 -0x07ff),
		    new FixEntry(FixType.ftInposHi, 0x0846 -0x07ff),
		    new FixEntry(FixType.ftMaxGamma, 0x0861 -0x07ff),
		    new FixEntry(FixType.ftEscValue, 0x0877 -0x07ff),
		    new FixEntry(FixType.ftOutposLo, 0x0879 -0x07ff),
		    new FixEntry(FixType.ftOutposHi, 0x087a -0x07ff),
		    new FixEntry(FixType.ftEscBits, 0x0886 -0x07ff),
		    new FixEntry(FixType.ftEsc8Bits, 0x088e -0x07ff),
		    new FixEntry(FixType.ftEscBits, 0x0899 -0x07ff),
		    new FixEntry(FixType.ft1MaxGamma, 0x08bc -0x07ff),
		    new FixEntry(FixType.ft8MaxGamma, 0x08c0 -0x07ff),
		    new FixEntry(FixType.ft2MaxGamma, 0x08ec -0x07ff),
		    new FixEntry(FixType.ftExtraBits, 0x08f2 -0x07ff),
		    new FixEntry(FixType.ftMemConfig, 0x0913 -0x07ff),
		    new FixEntry(FixType.ftFastDisable, 0x0916 -0x07ff),
		    new FixEntry(FixType.ftCli, 0x0921 -0x07ff),
		    new FixEntry(FixType.ftExecLo, 0x0923 -0x07ff),
		    new FixEntry(FixType.ftExecHi, 0x0924 -0x07ff),
		    new FixEntry(FixType.ftEnd,0)
	};
	static byte headerC64WD[] = {
	    0x01,0x08,0x0b,0x08,(byte)0xef,0x00,(byte)0x9e,0x32,
	    0x30,0x36,0x31,0x00,0x00,0x00,0x78,(byte)0xee,
	    0x30,(byte)0xd0,(byte)0xa9,0x38,(byte)0x85,0x01,(byte)0xa2,0x00,
	    (byte)0xbd,(byte)0xaa,(byte)0xaa,(byte)0x95,0x4b,(byte)0xca,0x10,(byte)0xf8,
	    (byte)0xa2,0x3b,(byte)0xbd,0x4c,0x08,(byte)0x9d,(byte)0xff,0x01,
	    (byte)0xca,(byte)0xd0,(byte)0xf7,(byte)0xa2,(byte)0xd4,(byte)0xbd,(byte)0x86,0x08,
	    (byte)0x9d,(byte)0xf6,0x00,(byte)0xca,(byte)0xd0,(byte)0xf7,(byte)0xa0,(byte)0xaa,
	    (byte)0xca,(byte)0xbd,(byte)0xaa,(byte)0xaa,(byte)0x9d,0x00,(byte)0xff,(byte)0x8a,
	    (byte)0xd0,(byte)0xf6,(byte)0xce,0x3d,0x08,(byte)0xce,0x3a,0x08,
	    (byte)0x88,(byte)0xd0,(byte)0xed,0x4c,0x16,0x01,0x48,(byte)0xad,
	    (byte)0xaa,(byte)0xaa,0x2a,(byte)0x85,(byte)0xf7,(byte)0xee,0x02,0x02,
	    (byte)0xd0,0x0a,(byte)0xee,0x03,0x02,(byte)0xd0,0x05,(byte)0xa9,
	    0x4b,(byte)0x8d,0x02,0x02,0x68,0x60,(byte)0xe8,(byte)0x8a,
	    0x06,(byte)0xf7,(byte)0xd0,0x03,0x20,0x00,0x02,(byte)0x90,
	    0x12,(byte)0xe8,(byte)0xe0,0x07,(byte)0xd0,(byte)0xf2,(byte)0xf0,0x0b,
	    (byte)0xa2,0x07,(byte)0xe8,0x06,(byte)0xf7,(byte)0xd0,0x03,0x20,
	    0x00,0x02,0x2a,(byte)0xca,(byte)0xd0,(byte)0xf5,0x18,0x60,
	    (byte)0x80,0x00,(byte)0x8d,(byte)0xaa,(byte)0xaa,(byte)0xe6,(byte)0xfa,(byte)0xd0,
	    0x02,(byte)0xe6,(byte)0xfb,(byte)0xca,0x60,(byte)0xa4,(byte)0xf8,(byte)0xa2,
	    0x02,0x20,0x36,0x02,(byte)0x85,(byte)0xf8,(byte)0x98,(byte)0xa2,
	    0x06,0x20,0x36,0x02,0x20,(byte)0xf9,0x00,(byte)0xa0,
	    0x00,(byte)0x8c,(byte)0x90,0x01,(byte)0x98,(byte)0xa2,0x02,0x20,
	    0x36,0x02,(byte)0xc5,(byte)0xf8,(byte)0xd0,(byte)0xe9,0x20,0x18,
	    0x02,(byte)0x85,0x2d,0x4a,(byte)0xd0,0x3f,0x20,0x2c,
	    0x02,0x4a,(byte)0x90,0x47,0x20,0x2c,0x02,0x4a,
	    (byte)0x90,(byte)0xcb,(byte)0xc8,0x20,0x18,0x02,(byte)0x85,0x2d,
	    (byte)0xc9,0x40,(byte)0x90,0x0b,(byte)0xa2,0x02,0x20,0x2d,
	    0x02,(byte)0x85,0x2d,0x20,0x18,0x02,(byte)0xa8,0x20,
	    0x18,0x02,(byte)0xaa,(byte)0xbd,(byte)0xba,0x01,(byte)0xe0,0x10,
	    (byte)0x90,0x06,(byte)0x8a,(byte)0xa2,0x04,0x20,0x2d,0x02,
	    (byte)0xa6,0x2d,(byte)0xe8,0x20,(byte)0xf9,0x00,(byte)0xd0,(byte)0xfb,
	    (byte)0x88,(byte)0xd0,(byte)0xf8,(byte)0xf0,(byte)0xaa,0x20,0x18,0x02,
	    (byte)0xc9,0x7f,(byte)0xf0,0x26,(byte)0xe9,0x00,(byte)0xa2,0x00,
	    0x20,0x36,0x02,(byte)0x85,0x2e,0x20,0x2a,0x02,
	    0x65,(byte)0xfa,(byte)0xa6,0x2d,(byte)0x85,0x2d,(byte)0xa5,(byte)0xfb,
	    (byte)0xe5,0x2e,(byte)0x85,0x2e,(byte)0xe8,(byte)0xb1,0x2d,0x18,
	    0x69,0x00,(byte)0xc8,0x20,(byte)0xf9,0x00,(byte)0xd0,(byte)0xf5,
	    (byte)0xf0,(byte)0xd1,(byte)0xa5,0x2d,(byte)0xc9,0x02,(byte)0xf0,0x09,
	    0x20,0x2a,0x02,(byte)0x8d,(byte)0x90,0x01,(byte)0x98,(byte)0xf0,
	    (byte)0xd2,(byte)0xa9,0x37,(byte)0x85,0x01,(byte)0xce,0x30,(byte)0xd0,
	    (byte)0xa5,(byte)0xfa,(byte)0x85,0x2d,(byte)0xa5,(byte)0xfb,(byte)0x85,0x2e,
	    0x58,0x4c,(byte)0xaa,(byte)0xaa,0x00,0x00,0x00,0x00,
	    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	    0x00,0x00,0x00
	};
	FixEntry fixTableC64WD[] = {
		    new FixEntry(FixType.ftFastDisable, 0x080e -0x07ff),
		    new FixEntry(FixType.ftOverlap, 0x0816 -0x07ff),
		    new FixEntry(FixType.ftOverlapLo, 0x0818 -0x07ff),
		    new FixEntry(FixType.ftOverlapHi, 0x0819 -0x07ff),
		    new FixEntry(FixType.ftIBufferSize, 0x0820 -0x07ff),
		    new FixEntry(FixType.ftReloc, 0x0823 -0x07ff),
		    new FixEntry(FixType.ftStackSize, 0x082b -0x07ff),
		    new FixEntry(FixType.ftReloc, 0x082e -0x07ff),
		    new FixEntry(FixType.ftSizePages, 0x0836 -0x07ff),
		    new FixEntry(FixType.ftSizeLo, 0x0839 -0x07ff),
		    new FixEntry(FixType.ftSizeHi, 0x083a -0x07ff),
		    new FixEntry(FixType.ftEndLo, 0x083c -0x07ff),
		    new FixEntry(FixType.ftEndHi, 0x083d -0x07ff),
		    new FixEntry(FixType.ftReloc, 0x0843 -0x07ff),
		    new FixEntry(FixType.ftReloc, 0x0846 -0x07ff),
		    new FixEntry(FixType.ftDeCall, 0x084a -0x07ff),
		    new FixEntry(FixType.ftInposLo, 0x084f -0x07ff),
		    new FixEntry(FixType.ftInposHi, 0x0850 -0x07ff),
		    new FixEntry(FixType.ftMaxGamma, 0x0872 -0x07ff),
		    new FixEntry(FixType.ftEscValue, 0x0888 -0x07ff),
		    new FixEntry(FixType.ftOutposLo, 0x088a -0x07ff),
		    new FixEntry(FixType.ftOutposHi, 0x088b -0x07ff),
		    new FixEntry(FixType.ftEscBits, 0x0897 -0x07ff),
		    new FixEntry(FixType.ftEsc8Bits, 0x089f -0x07ff),
		    new FixEntry(FixType.ftEscBits, 0x08ad -0x07ff),
		    new FixEntry(FixType.ft1MaxGamma, 0x08d0 -0x07ff),
		    new FixEntry(FixType.ft8MaxGamma, 0x08d4 -0x07ff),
		    new FixEntry(FixType.ft2MaxGamma, 0x0900 -0x07ff),
		    new FixEntry(FixType.ftExtraBits, 0x0906 -0x07ff),
		    new FixEntry(FixType.ftOp, 0x091f -0x07ff),
		    new FixEntry(FixType.ftMemConfig, 0x0939 -0x07ff),
		    new FixEntry(FixType.ftFastDisable, 0x093c -0x07ff),
		    new FixEntry(FixType.ftCli, 0x0947 -0x07ff),
		    new FixEntry(FixType.ftExecLo, 0x0949 -0x07ff),
		    new FixEntry(FixType.ftExecHi, 0x094a -0x07ff),
		    new FixEntry(FixType.ftEnd,0)
	};
	static byte headerC64D[] = {
	    0x01,0x08,0x0b,0x08,(byte)0xef,0x00,(byte)0x9e,0x32,
	    0x30,0x36,0x31,0x00,0x00,0x00,0x78,(byte)0xee,
	    0x30,(byte)0xd0,(byte)0xa9,0x38,(byte)0x85,0x01,(byte)0xa2,0x34,
	    (byte)0xbd,0x42,0x08,(byte)0x9d,(byte)0xff,0x01,(byte)0xca,(byte)0xd0,
	    (byte)0xf7,(byte)0xa2,(byte)0xd4,(byte)0xbd,0x75,0x08,(byte)0x9d,(byte)0xf6,
	    0x00,(byte)0xca,(byte)0xd0,(byte)0xf7,(byte)0xa0,(byte)0xaa,(byte)0xca,(byte)0xbd,
	    (byte)0xaa,(byte)0xaa,(byte)0x9d,0x00,(byte)0xff,(byte)0x8a,(byte)0xd0,(byte)0xf6,
	    (byte)0xce,0x33,0x08,(byte)0xce,0x30,0x08,(byte)0x88,(byte)0xd0,
	    (byte)0xed,0x4c,0x16,0x01,0x48,(byte)0xad,(byte)0xaa,(byte)0xaa,
	    0x2a,(byte)0x85,(byte)0xf7,(byte)0xee,0x02,0x02,(byte)0xd0,0x03,
	    (byte)0xee,0x03,0x02,0x68,0x60,(byte)0xe8,(byte)0x8a,0x06,
	    (byte)0xf7,(byte)0xd0,0x03,0x20,0x00,0x02,(byte)0x90,0x12,
	    (byte)0xe8,(byte)0xe0,0x07,(byte)0xd0,(byte)0xf2,(byte)0xf0,0x0b,(byte)0xa2,
	    0x07,(byte)0xe8,0x06,(byte)0xf7,(byte)0xd0,0x03,0x20,0x00,
	    0x02,0x2a,(byte)0xca,(byte)0xd0,(byte)0xf5,0x18,0x60,(byte)0x80,
	    0x00,(byte)0x8d,(byte)0xaa,(byte)0xaa,(byte)0xe6,(byte)0xfa,(byte)0xd0,0x02,
	    (byte)0xe6,(byte)0xfb,(byte)0xca,0x60,(byte)0xa4,(byte)0xf8,(byte)0xa2,0x02,
	    0x20,0x2f,0x02,(byte)0x85,(byte)0xf8,(byte)0x98,(byte)0xa2,0x06,
	    0x20,0x2f,0x02,0x20,(byte)0xf9,0x00,(byte)0xa0,0x00,
	    (byte)0x8c,(byte)0x90,0x01,(byte)0x98,(byte)0xa2,0x02,0x20,0x2f,
	    0x02,(byte)0xc5,(byte)0xf8,(byte)0xd0,(byte)0xe9,0x20,0x11,0x02,
	    (byte)0x85,0x2d,0x4a,(byte)0xd0,0x3f,0x20,0x25,0x02,
	    0x4a,(byte)0x90,0x47,0x20,0x25,0x02,0x4a,(byte)0x90,
	    (byte)0xcb,(byte)0xc8,0x20,0x11,0x02,(byte)0x85,0x2d,(byte)0xc9,
	    0x40,(byte)0x90,0x0b,(byte)0xa2,0x02,0x20,0x26,0x02,
	    (byte)0x85,0x2d,0x20,0x11,0x02,(byte)0xa8,0x20,0x11,
	    0x02,(byte)0xaa,(byte)0xbd,(byte)0xba,0x01,(byte)0xe0,0x10,(byte)0x90,
	    0x06,(byte)0x8a,(byte)0xa2,0x04,0x20,0x26,0x02,(byte)0xa6,
	    0x2d,(byte)0xe8,0x20,(byte)0xf9,0x00,(byte)0xd0,(byte)0xfb,(byte)0x88,
	    (byte)0xd0,(byte)0xf8,(byte)0xf0,(byte)0xaa,0x20,0x11,0x02,(byte)0xc9,
	    0x7f,(byte)0xf0,0x26,(byte)0xe9,0x00,(byte)0xa2,0x00,0x20,
	    0x2f,0x02,(byte)0x85,0x2e,0x20,0x23,0x02,0x65,
	    (byte)0xfa,(byte)0xa6,0x2d,(byte)0x85,0x2d,(byte)0xa5,(byte)0xfb,(byte)0xe5,
	    0x2e,(byte)0x85,0x2e,(byte)0xe8,(byte)0xb1,0x2d,0x18,0x69,
	    0x00,(byte)0xc8,0x20,(byte)0xf9,0x00,(byte)0xd0,(byte)0xf5,(byte)0xf0,
	    (byte)0xd1,(byte)0xa5,0x2d,(byte)0xc9,0x02,(byte)0xf0,0x09,0x20,
	    0x23,0x02,(byte)0x8d,(byte)0x90,0x01,(byte)0x98,(byte)0xf0,(byte)0xd2,
	    (byte)0xa9,0x37,(byte)0x85,0x01,(byte)0xce,0x30,(byte)0xd0,(byte)0xa5,
	    (byte)0xfa,(byte)0x85,0x2d,(byte)0xa5,(byte)0xfb,(byte)0x85,0x2e,0x58,
	    0x4c,(byte)0xaa,(byte)0xaa,0x00,0x00,0x00,0x00,0x00,
	    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	    0x00,0x00
	};
	FixEntry fixTableC64D[] = {
		    new FixEntry(FixType.ftFastDisable, 0x080e -0x07ff),
		    new FixEntry(FixType.ftIBufferSize, 0x0816 -0x07ff),
		    new FixEntry(FixType.ftReloc, 0x0819 -0x07ff),
		    new FixEntry(FixType.ftStackSize, 0x0821 -0x07ff),
		    new FixEntry(FixType.ftReloc, 0x0824 -0x07ff),
		    new FixEntry(FixType.ftSizePages, 0x082c -0x07ff),
		    new FixEntry(FixType.ftSizeLo, 0x082f -0x07ff),
		    new FixEntry(FixType.ftSizeHi, 0x0830 -0x07ff),
		    new FixEntry(FixType.ftEndLo, 0x0832 -0x07ff),
		    new FixEntry(FixType.ftEndHi, 0x0833 -0x07ff),
		    new FixEntry(FixType.ftReloc, 0x0839 -0x07ff),
		    new FixEntry(FixType.ftReloc, 0x083c -0x07ff),
		    new FixEntry(FixType.ftDeCall, 0x0840 -0x07ff),
		    new FixEntry(FixType.ftInposLo, 0x0845 -0x07ff),
		    new FixEntry(FixType.ftInposHi, 0x0846 -0x07ff),
		    new FixEntry(FixType.ftMaxGamma, 0x0861 -0x07ff),
		    new FixEntry(FixType.ftEscValue, 0x0877 -0x07ff),
		    new FixEntry(FixType.ftOutposLo, 0x0879 -0x07ff),
		    new FixEntry(FixType.ftOutposHi, 0x087a -0x07ff),
		    new FixEntry(FixType.ftEscBits, 0x0886 -0x07ff),
		    new FixEntry(FixType.ftEsc8Bits, 0x088e -0x07ff),
		    new FixEntry(FixType.ftEscBits, 0x089c -0x07ff),
		    new FixEntry(FixType.ft1MaxGamma, 0x08bf -0x07ff),
		    new FixEntry(FixType.ft8MaxGamma, 0x08c3 -0x07ff),
		    new FixEntry(FixType.ft2MaxGamma, 0x08ef -0x07ff),
		    new FixEntry(FixType.ftExtraBits, 0x08f5 -0x07ff),
		    new FixEntry(FixType.ftOp, 0x090e -0x07ff),
		    new FixEntry(FixType.ftMemConfig, 0x0928 -0x07ff),
		    new FixEntry(FixType.ftFastDisable, 0x092b -0x07ff),
		    new FixEntry(FixType.ftCli, 0x0936 -0x07ff),
		    new FixEntry(FixType.ftExecLo, 0x0938 -0x07ff),
		    new FixEntry(FixType.ftExecHi, 0x0939 -0x07ff),
		    new FixEntry(FixType.ftEnd,0)
	};
	static byte headerC64WF[] = {
	    0x01,0x08,0x0b,0x08,(byte)0xef,0x00,(byte)0x9e,0x32,
	    0x30,0x36,0x31,0x00,0x00,0x00,0x78,(byte)0xee,
	    0x30,(byte)0xd0,(byte)0xa9,0x38,(byte)0x85,0x01,(byte)0xa2,0x00,
	    (byte)0xbd,(byte)0xaa,(byte)0xaa,(byte)0x95,0x4b,(byte)0xca,0x10,(byte)0xf8,
	    (byte)0xa2,0x3b,(byte)0xbd,0x4c,0x08,(byte)0x9d,(byte)0xff,0x01,
	    (byte)0xca,(byte)0xd0,(byte)0xf7,(byte)0xa2,(byte)0xd6,(byte)0xbd,(byte)0x86,0x08,
	    (byte)0x9d,(byte)0xf6,0x00,(byte)0xca,(byte)0xd0,(byte)0xf7,(byte)0xa0,(byte)0xaa,
	    (byte)0xca,(byte)0xbd,(byte)0xaa,(byte)0xaa,(byte)0x9d,0x00,(byte)0xff,(byte)0x8a,
	    (byte)0xd0,(byte)0xf6,(byte)0xce,0x3d,0x08,(byte)0xce,0x3a,0x08,
	    (byte)0x88,(byte)0xd0,(byte)0xed,0x4c,0x18,0x01,0x48,(byte)0xad,
	    (byte)0xaa,(byte)0xaa,0x2a,(byte)0x85,(byte)0xf7,(byte)0xee,0x02,0x02,
	    (byte)0xd0,0x0a,(byte)0xee,0x03,0x02,(byte)0xd0,0x05,(byte)0xa9,
	    0x4b,(byte)0x8d,0x02,0x02,0x68,0x60,(byte)0xe8,(byte)0x8a,
	    0x06,(byte)0xf7,(byte)0xd0,0x03,0x20,0x00,0x02,(byte)0x90,
	    0x12,(byte)0xe8,(byte)0xe0,0x07,(byte)0xd0,(byte)0xf2,(byte)0xf0,0x0b,
	    (byte)0xa2,0x07,(byte)0xe8,0x06,(byte)0xf7,(byte)0xd0,0x03,0x20,
	    0x00,0x02,0x2a,(byte)0xca,(byte)0xd0,(byte)0xf5,0x18,0x60,
	    (byte)0x80,0x00,(byte)0x8d,(byte)0xaa,(byte)0xaa,(byte)0xe6,(byte)0xfa,(byte)0xf0,
	    0x02,(byte)0xca,0x60,(byte)0xe6,(byte)0xfb,(byte)0xca,0x60,(byte)0xa4,
	    (byte)0xf8,(byte)0xa2,0x02,0x20,0x36,0x02,(byte)0x85,(byte)0xf8,
	    (byte)0x98,(byte)0xa2,0x06,0x20,0x36,0x02,0x20,(byte)0xf9,
	    0x00,(byte)0xa0,0x00,(byte)0x98,(byte)0xa2,0x02,0x20,0x36,
	    0x02,(byte)0xc5,(byte)0xf8,(byte)0xd0,(byte)0xec,0x20,0x18,0x02,
	    (byte)0x85,0x2d,0x4a,(byte)0xd0,0x45,0x06,(byte)0xf7,(byte)0xd0,
	    0x03,0x20,0x00,0x02,(byte)0x90,0x4a,0x06,(byte)0xf7,
	    (byte)0xd0,0x03,0x20,0x00,0x02,(byte)0x90,(byte)0xc8,(byte)0xc8,
	    0x20,0x18,0x02,(byte)0x85,0x2d,(byte)0xc9,0x40,(byte)0x90,
	    0x0b,(byte)0xa2,0x02,0x20,0x2d,0x02,(byte)0x85,0x2d,
	    0x20,0x18,0x02,(byte)0xa8,0x20,0x18,0x02,(byte)0xaa,
	    (byte)0xbd,(byte)0xbc,0x01,(byte)0xe0,0x10,(byte)0x90,0x06,(byte)0x8a,
	    (byte)0xa2,0x04,0x20,0x2d,0x02,(byte)0xa6,0x2d,(byte)0xe8,
	    0x20,(byte)0xf9,0x00,(byte)0xd0,(byte)0xfb,(byte)0x88,(byte)0xd0,(byte)0xf8,
	    (byte)0xf0,(byte)0xa7,0x20,0x18,0x02,(byte)0xc9,0x7f,(byte)0xf0,
	    0x32,(byte)0xe9,0x00,(byte)0xa2,0x00,0x20,0x36,0x02,
	    (byte)0x85,0x2e,0x20,0x2a,0x02,0x65,(byte)0xfa,(byte)0xa6,
	    0x2d,(byte)0x8d,(byte)0x94,0x01,(byte)0xa5,(byte)0xfb,(byte)0xe5,0x2e,
	    (byte)0x8d,(byte)0x95,0x01,(byte)0xe8,(byte)0xb9,(byte)0xaa,(byte)0xaa,(byte)0x91,
	    (byte)0xfa,(byte)0xc8,(byte)0xca,(byte)0xd0,(byte)0xf7,(byte)0x88,(byte)0x98,0x38,
	    0x65,(byte)0xfa,(byte)0x85,(byte)0xfa,(byte)0x90,0x02,(byte)0xe6,(byte)0xfb,
	    0x4c,0x18,0x01,(byte)0xa9,0x37,(byte)0x85,0x01,(byte)0xce,
	    0x30,(byte)0xd0,(byte)0xa5,(byte)0xfa,(byte)0x85,0x2d,(byte)0xa5,(byte)0xfb,
	    (byte)0x85,0x2e,0x58,0x4c,(byte)0xaa,(byte)0xaa,0x00,0x00,
	    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	    0x00,0x00,0x00,0x00,0x00
	};
	FixEntry fixTableC64WF[] = {
		    new FixEntry(FixType.ftFastDisable, 0x080e -0x07ff),
		    new FixEntry(FixType.ftOverlap, 0x0816 -0x07ff),
		    new FixEntry(FixType.ftOverlapLo, 0x0818 -0x07ff),
		    new FixEntry(FixType.ftOverlapHi, 0x0819 -0x07ff),
		    new FixEntry(FixType.ftIBufferSize, 0x0820 -0x07ff),
		    new FixEntry(FixType.ftReloc, 0x0823 -0x07ff),
		    new FixEntry(FixType.ftStackSize, 0x082b -0x07ff),
		    new FixEntry(FixType.ftReloc, 0x082e -0x07ff),
		    new FixEntry(FixType.ftSizePages, 0x0836 -0x07ff),
		    new FixEntry(FixType.ftSizeLo, 0x0839 -0x07ff),
		    new FixEntry(FixType.ftSizeHi, 0x083a -0x07ff),
		    new FixEntry(FixType.ftEndLo, 0x083c -0x07ff),
		    new FixEntry(FixType.ftEndHi, 0x083d -0x07ff),
		    new FixEntry(FixType.ftReloc, 0x0843 -0x07ff),
		    new FixEntry(FixType.ftReloc, 0x0846 -0x07ff),
		    new FixEntry(FixType.ftDeCall, 0x084a -0x07ff),
		    new FixEntry(FixType.ftInposLo, 0x084f -0x07ff),
		    new FixEntry(FixType.ftInposHi, 0x0850 -0x07ff),
		    new FixEntry(FixType.ftMaxGamma, 0x0872 -0x07ff),
		    new FixEntry(FixType.ftEscValue, 0x0888 -0x07ff),
		    new FixEntry(FixType.ftOutposLo, 0x088a -0x07ff),
		    new FixEntry(FixType.ftOutposHi, 0x088b -0x07ff),
		    new FixEntry(FixType.ftEscBits, 0x0899 -0x07ff),
		    new FixEntry(FixType.ftEsc8Bits, 0x08a1 -0x07ff),
		    new FixEntry(FixType.ftEscBits, 0x08ac -0x07ff),
		    new FixEntry(FixType.ft1MaxGamma, 0x08d5 -0x07ff),
		    new FixEntry(FixType.ft8MaxGamma, 0x08d9 -0x07ff),
		    new FixEntry(FixType.ft2MaxGamma, 0x0905 -0x07ff),
		    new FixEntry(FixType.ftExtraBits, 0x090b -0x07ff),
		    new FixEntry(FixType.ftMemConfig, 0x093b -0x07ff),
		    new FixEntry(FixType.ftFastDisable, 0x093e -0x07ff),
		    new FixEntry(FixType.ftCli, 0x0949 -0x07ff),
		    new FixEntry(FixType.ftExecLo, 0x094b -0x07ff),
		    new FixEntry(FixType.ftExecHi, 0x094c -0x07ff),
		    new FixEntry(FixType.ftEnd,0)
	};
	static byte headerC64F[] = {
	    0x01,0x08,0x0b,0x08,(byte)0xef,0x00,(byte)0x9e,0x32,
	    0x30,0x36,0x31,0x00,0x00,0x00,0x78,(byte)0xee,
	    0x30,(byte)0xd0,(byte)0xa9,0x38,(byte)0x85,0x01,(byte)0xa2,0x34,
	    (byte)0xbd,0x42,0x08,(byte)0x9d,(byte)0xff,0x01,(byte)0xca,(byte)0xd0,
	    (byte)0xf7,(byte)0xa2,(byte)0xd6,(byte)0xbd,0x75,0x08,(byte)0x9d,(byte)0xf6,
	    0x00,(byte)0xca,(byte)0xd0,(byte)0xf7,(byte)0xa0,(byte)0xaa,(byte)0xca,(byte)0xbd,
	    (byte)0xaa,(byte)0xaa,(byte)0x9d,0x00,(byte)0xff,(byte)0x8a,(byte)0xd0,(byte)0xf6,
	    (byte)0xce,0x33,0x08,(byte)0xce,0x30,0x08,(byte)0x88,(byte)0xd0,
	    (byte)0xed,0x4c,0x18,0x01,0x48,(byte)0xad,(byte)0xaa,(byte)0xaa,
	    0x2a,(byte)0x85,(byte)0xf7,(byte)0xee,0x02,0x02,(byte)0xd0,0x03,
	    (byte)0xee,0x03,0x02,0x68,0x60,(byte)0xe8,(byte)0x8a,0x06,
	    (byte)0xf7,(byte)0xd0,0x03,0x20,0x00,0x02,(byte)0x90,0x12,
	    (byte)0xe8,(byte)0xe0,0x07,(byte)0xd0,(byte)0xf2,(byte)0xf0,0x0b,(byte)0xa2,
	    0x07,(byte)0xe8,0x06,(byte)0xf7,(byte)0xd0,0x03,0x20,0x00,
	    0x02,0x2a,(byte)0xca,(byte)0xd0,(byte)0xf5,0x18,0x60,(byte)0x80,
	    0x00,(byte)0x8d,(byte)0xaa,(byte)0xaa,(byte)0xe6,(byte)0xfa,(byte)0xf0,0x02,
	    (byte)0xca,0x60,(byte)0xe6,(byte)0xfb,(byte)0xca,0x60,(byte)0xa4,(byte)0xf8,
	    (byte)0xa2,0x02,0x20,0x2f,0x02,(byte)0x85,(byte)0xf8,(byte)0x98,
	    (byte)0xa2,0x06,0x20,0x2f,0x02,0x20,(byte)0xf9,0x00,
	    (byte)0xa0,0x00,(byte)0x98,(byte)0xa2,0x02,0x20,0x2f,0x02,
	    (byte)0xc5,(byte)0xf8,(byte)0xd0,(byte)0xec,0x20,0x11,0x02,(byte)0x85,
	    0x2d,0x4a,(byte)0xd0,0x45,0x06,(byte)0xf7,(byte)0xd0,0x03,
	    0x20,0x00,0x02,(byte)0x90,0x4a,0x06,(byte)0xf7,(byte)0xd0,
	    0x03,0x20,0x00,0x02,(byte)0x90,(byte)0xc8,(byte)0xc8,0x20,
	    0x11,0x02,(byte)0x85,0x2d,(byte)0xc9,0x40,(byte)0x90,0x0b,
	    (byte)0xa2,0x02,0x20,0x26,0x02,(byte)0x85,0x2d,0x20,
	    0x11,0x02,(byte)0xa8,0x20,0x11,0x02,(byte)0xaa,(byte)0xbd,
	    (byte)0xbc,0x01,(byte)0xe0,0x10,(byte)0x90,0x06,(byte)0x8a,(byte)0xa2,
	    0x04,0x20,0x26,0x02,(byte)0xa6,0x2d,(byte)0xe8,0x20,
	    (byte)0xf9,0x00,(byte)0xd0,(byte)0xfb,(byte)0x88,(byte)0xd0,(byte)0xf8,(byte)0xf0,
	    (byte)0xa7,0x20,0x11,0x02,(byte)0xc9,0x7f,(byte)0xf0,0x32,
	    (byte)0xe9,0x00,(byte)0xa2,0x00,0x20,0x2f,0x02,(byte)0x85,
	    0x2e,0x20,0x23,0x02,0x65,(byte)0xfa,(byte)0xa6,0x2d,
	    (byte)0x8d,(byte)0x94,0x01,(byte)0xa5,(byte)0xfb,(byte)0xe5,0x2e,(byte)0x8d,
	    (byte)0x95,0x01,(byte)0xe8,(byte)0xb9,(byte)0xaa,(byte)0xaa,(byte)0x91,(byte)0xfa,
	    (byte)0xc8,(byte)0xca,(byte)0xd0,(byte)0xf7,(byte)0x88,(byte)0x98,0x38,0x65,
	    (byte)0xfa,(byte)0x85,(byte)0xfa,(byte)0x90,0x02,(byte)0xe6,(byte)0xfb,0x4c,
	    0x18,0x01,(byte)0xa9,0x37,(byte)0x85,0x01,(byte)0xce,0x30,
	    (byte)0xd0,(byte)0xa5,(byte)0xfa,(byte)0x85,0x2d,(byte)0xa5,(byte)0xfb,(byte)0x85,
	    0x2e,0x58,0x4c,(byte)0xaa,(byte)0xaa,0x00,0x00,0x00,
	    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	    0x00,0x00,0x00,0x00
	};
	FixEntry fixTableC64F[] = {
		    new FixEntry(FixType.ftFastDisable, 0x080e -0x07ff),
		    new FixEntry(FixType.ftIBufferSize, 0x0816 -0x07ff),
		    new FixEntry(FixType.ftReloc, 0x0819 -0x07ff),
		    new FixEntry(FixType.ftStackSize, 0x0821 -0x07ff),
		    new FixEntry(FixType.ftReloc, 0x0824 -0x07ff),
		    new FixEntry(FixType.ftSizePages, 0x082c -0x07ff),
		    new FixEntry(FixType.ftSizeLo, 0x082f -0x07ff),
		    new FixEntry(FixType.ftSizeHi, 0x0830 -0x07ff),
		    new FixEntry(FixType.ftEndLo, 0x0832 -0x07ff),
		    new FixEntry(FixType.ftEndHi, 0x0833 -0x07ff),
		    new FixEntry(FixType.ftReloc, 0x0839 -0x07ff),
		    new FixEntry(FixType.ftReloc, 0x083c -0x07ff),
		    new FixEntry(FixType.ftDeCall, 0x0840 -0x07ff),
		    new FixEntry(FixType.ftInposLo, 0x0845 -0x07ff),
		    new FixEntry(FixType.ftInposHi, 0x0846 -0x07ff),
		    new FixEntry(FixType.ftMaxGamma, 0x0861 -0x07ff),
		    new FixEntry(FixType.ftEscValue, 0x0877 -0x07ff),
		    new FixEntry(FixType.ftOutposLo, 0x0879 -0x07ff),
		    new FixEntry(FixType.ftOutposHi, 0x087a -0x07ff),
		    new FixEntry(FixType.ftEscBits, 0x0888 -0x07ff),
		    new FixEntry(FixType.ftEsc8Bits, 0x0890 -0x07ff),
		    new FixEntry(FixType.ftEscBits, 0x089b -0x07ff),
		    new FixEntry(FixType.ft1MaxGamma, 0x08c4 -0x07ff),
		    new FixEntry(FixType.ft8MaxGamma, 0x08c8 -0x07ff),
		    new FixEntry(FixType.ft2MaxGamma, 0x08f4 -0x07ff),
		    new FixEntry(FixType.ftExtraBits, 0x08fa -0x07ff),
		    new FixEntry(FixType.ftMemConfig, 0x092a -0x07ff),
		    new FixEntry(FixType.ftFastDisable, 0x092d -0x07ff),
		    new FixEntry(FixType.ftCli, 0x0938 -0x07ff),
		    new FixEntry(FixType.ftExecLo, 0x093a -0x07ff),
		    new FixEntry(FixType.ftExecHi, 0x093b -0x07ff),
		    new FixEntry(FixType.ftEnd,0)
	};

	final static int FIXF_C64	=1;
	final static int FIXF_VIC20	=2;
	final static int FIXF_C16	=4;
	final static int FIXF_C128	=8;
	final static int FIXF_MACHMASK	=0xff;	/* Must be exactly correct */

	final static int FIXF_WRAP	=256;	/* If requested, must be present */
	final static int FIXF_DLZ	=512;	/* If requested, must be present */
	final static int FIXF_BASIC	=1024;	/* If requested, must be present */

	final static int FIXF_FAST	=2048;
	final static int FIXF_SHORT	=4096;

	final static int FIXF_MUSTMASK	=(FIXF_WRAP|FIXF_DLZ|FIXF_BASIC);

	FixStruct fixStruct[] = {
		    new FixStruct(headerC64, headerC64.length, fixTableC64, "C64", FIXF_C64),
		    new FixStruct(headerC64S, headerC64S.length, fixTableC64S, "C64 short", FIXF_C64|FIXF_SHORT),
		    new FixStruct(headerC64SB, headerC64SB.length, fixTableC64SB, "C64 short basic", FIXF_C64|FIXF_SHORT|FIXF_BASIC),
		    new FixStruct(headerC64SW, headerC64SW.length, fixTableC64SW, "C64 short wrap", FIXF_C64|FIXF_SHORT|FIXF_WRAP),
		    new FixStruct(headerC64D, headerC64D.length, fixTableC64D, "C64 delta", FIXF_C64|FIXF_DLZ),
		    new FixStruct(headerC64F, headerC64F.length, fixTableC64F, "C64 fast", FIXF_C64|FIXF_FAST),
		    new FixStruct(headerC64W, headerC64W.length, fixTableC64W, "C64 wrap", FIXF_C64|FIXF_WRAP),
		    new FixStruct(headerC64WD, headerC64WD.length, fixTableC64WD, "C64 wrap delta", FIXF_C64|FIXF_WRAP|FIXF_DLZ),
		    new FixStruct(headerC64WF, headerC64WF.length, fixTableC64WF, "C64 fast wrap", FIXF_C64|FIXF_WRAP|FIXF_FAST),
		
	};
}
